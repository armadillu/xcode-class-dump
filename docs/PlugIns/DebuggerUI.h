/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

/*
 * File: /Applications/Xcode.app/Contents/PlugIns/DebuggerUI.ideplugin/Contents/MacOS/DebuggerUI
 * UUID: D399F888-1705-3139-AD9B-A61C2A4DC504
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 1185.0.0, Compatibility version: 1.0.0
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Required
 *       Run path: @loader_path/../../../
 *               = /Applications/Xcode.app/Contents/PlugIns
 */

@protocol DBGBreakpointEditorFirstResponderProvider <NSObject>
@property(readonly) NSView *initialFirstResponder;
@end

@protocol DVTCompletingTextViewDelegate <NSTextViewDelegate>

@optional
- (BOOL)completingTextViewHandleCancel:(id)arg1;
- (unsigned long long)textView:(id)arg1 lineEndingForWritingSelectionToPasteboard:(id)arg2 type:(id)arg3;
- (unsigned long long)textView:(id)arg1 lineEndingForReadingSelectionFromPasteboard:(id)arg2 type:(id)arg3;
- (void)textView:(id)arg1 layoutManager:(id)arg2 didLayoutGlyphsUpToCharacterIndex:(unsigned long long)arg3;
- (id)completingTextView:(id)arg1 documentLocationForWordStartLocation:(unsigned long long)arg2;
- (void)completingTextView:(id)arg1 willPassContextToStrategies:(id)arg2 atWordStartLocation:(unsigned long long)arg3;
@end

@protocol DVTFindBarFindable

@optional
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
@end

@protocol DVTInvalidation <NSObject>
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTMessageBubbleAnnotationDelegate <DVTTextAnnotationDelegate>

@optional
- (void)didClickMessageBubbleForAnnotation:(id)arg1 onIcon:(BOOL)arg2 inTextView:(id)arg3 event:(id)arg4;
@end

@protocol DVTSimpleSerialization
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
@end

@protocol DVTSourceExpressionSource <NSObject, DVTInvalidation>
@property(readonly, nonatomic) DVTSourceExpression *mouseOverExpression;
@property(readonly, nonatomic) struct CGRect currentSelectionFrame;
@property(readonly) DVTSourceExpression *contextMenuExpression;
@property(readonly, nonatomic) DVTSourceExpression *selectedExpression;
- (struct CGRect)expressionFrameForExpression:(id)arg1;

@optional
@property(readonly) DVTSourceExpression *quickHelpExpression;
- (void)unregisterMouseOverExpressionObserver:(id)arg1;
- (void)registerMouseOverExpressionObserver:(id)arg1;
- (void)unregisterSelectedExpressionObserver:(id)arg1;
- (void)registerSelectedExpressionObserver:(id)arg1;
@end

@protocol DVTSourceLandmarkProvider <NSObject>
- (id)documentLocationFromCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)characterRangeFromDocumentLocation:(id)arg1;
- (struct _NSRange)lineRangeOfSourceLandmark:(id)arg1;
- (id)sourceLandmarkItemAtLineNumber:(unsigned long long)arg1;
- (id)sourceLandmarkItemAtCharacterIndex:(unsigned long long)arg1;
@end

@protocol DVTTextAnnotationDelegate <NSObject>

@optional
- (void)annotation:(id)arg1 willDrawInTextSidebarView:(id)arg2 withAnnotationsInSameLine:(id)arg3;
- (BOOL)annotation:(id)arg1 shouldDrawInTextSidebarView:(id)arg2 withAnnotationsInSameLine:(id)arg3;
- (double)sidebarMarkerOpacityForAnnotation:(id)arg1;
- (BOOL)shouldMoveCursorForAnnotation:(id)arg1;
- (id)contextMenuItemsForAnnotation:(id)arg1 inTextSidebarView:(id)arg2;
- (void)didDeleteOrReplaceParagraphForAnnotation:(id)arg1;
- (void)didRemoveAnnotation:(id)arg1;
- (void)didMoveAnnotation:(id)arg1;
- (unsigned long long)annotation:(id)arg1 willMoveToParagraphNumber:(unsigned long long)arg2;
- (void)didDragAnnotation:(id)arg1 inTextSidebarView:(id)arg2 event:(id)arg3;
- (void)didEndRolloverOnAnnotation:(id)arg1 inTextSidebarView:(id)arg2 event:(id)arg3;
- (void)didBeginRolloverOnAnnotation:(id)arg1 inTextSidebarView:(id)arg2 event:(id)arg3;
- (void)didClickAnnotation:(id)arg1 inTextSidebarView:(id)arg2 event:(id)arg3;
@end

@protocol DVTTextFindable <NSObject>
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;

@optional
@property unsigned long long supportedMatchingOptions;
@end

@protocol IDEBreakpointActionRowDelegate
- (void)removeRowRequestedByRow:(id)arg1;
- (void)addRowRequestedByRow:(id)arg1;
@end

@protocol IDEDebugNavigableContentDelegate <NSObject>
@property(readonly) NSString *associatedProcessUUID;
- (id)representedObjectsToReveal;
- (id)pasteboardStringForRepresentedObject:(id)arg1;
- (BOOL)shouldHandleUserDirectMoveUpOrDown:(BOOL)arg1 forRepresentedObject:(id)arg2 newRow:(long long *)arg3;
- (id)expandableItemsForProcessItem:(id)arg1;
- (id)tokenForExpandedRepresentedObject:(id)arg1;
- (id)launchSessionForSelectedRepresentedObject:(id)arg1;
- (void)openSelectedRepresentedObject:(id)arg1 withEventType:(unsigned long long)arg2;
- (BOOL)shouldSelectItemForRepresentedObject:(id)arg1 withPrevious:(id)arg2 next:(id)arg3;
- (id)dataCellForRepresentedObject:(id)arg1;
- (void)willDisplayCell:(id)arg1 forRepresentedObject:(id)arg2 item:(id)arg3;
- (void)debugNavigatorViewWillUninstall;
- (void)debugNavigatorViewDidInstall;
- (id)initWithProcess:(id)arg1 debugNavigator:(id)arg2;

@optional
- (id)minCompressionButtonTooltip;
- (id)compressionSliderTooltip;
- (id)maxCompressionButtonTooltip;
- (id)showOnlyInterestingContentButtonTooltip;
- (id)showOnlyInterestingContentButtonAlternateImage;
- (id)showOnlyInterestingContentButtonImage;
- (void)contextualMenuNeedsUpdate:(id)arg1;
- (BOOL)validateUserInterfaceAction:(SEL)arg1 forRepresentedObject:(id)arg2;
- (BOOL)validateUserInterfaceAction:(SEL)arg1;
- (void)didCollapseForItem:(id)arg1;
- (void)didExpandForItem:(id)arg1;
- (void)willExpandForItem:(id)arg1;
- (void)handleUserDirectDeleteRepresentedObject:(id)arg1;
- (void)updateForNewCompressionValue:(id)arg1;
- (void)updateForNewShowOnlyInterestingContent:(id)arg1;
- (void)updateForNewThreadOrQueueMode:(id)arg1;
- (BOOL)shouldExpandItemAsResultOfOptionClick:(id)arg1 clickedItem:(id)arg2;
- (BOOL)isGroupHeaderForRepresentedObject:(id)arg1 item:(id)arg2;
- (double)heightOfRowForRepresentedObject:(id)arg1;
- (id)controllerForQueryingDescendantItem;
@end

@protocol IDEDebugNavigableModel <NSObject>
@property(readonly) IDELaunchSession *launchSession;
@property(readonly) NSString *associatedProcessUUID;
@end

@protocol IDEDebugSessionController <NSObject>
+ (id)descendantItemForRepresentedObject:(id)arg1 inRootNavigableItem:(id)arg2;
@property(readonly) id <IDEDebugSession> debugSession;
- (void)openMemoryBrowser;
- (void)setSelectedNavigableItemFromUserInterface:(id)arg1;
- (void)mouseExitedSidebarLineArea;
- (void)mouseOverSidebarAtLocation:(id)arg1 withinBlockAtRange:(struct _NSRange)arg2 withScreenFrame:(struct CGRect)arg3;
- (id)initWithLaunchSession:(id)arg1 workspaceTabController:(id)arg2;
@end

@protocol IDEOCUnitTestOutputParserDelegate <NSObject>
- (void)testDidOutput:(id)arg1;
- (void)testCaseDidProducePerformanceOutput:(id)arg1 rawOutput:(id)arg2;
- (void)testCaseDidFailForTestClass:(id)arg1 method:(id)arg2 withMessage:(id)arg3 file:(id)arg4 line:(long long)arg5 rawOutput:(id)arg6;
- (void)testCaseDidFinishForTestClass:(id)arg1 method:(id)arg2 withStatus:(id)arg3 duration:(double)arg4 rawOutput:(id)arg5;
- (void)testCaseDidStartForTestClass:(id)arg1 method:(id)arg2 rawOutput:(id)arg3;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
@end

@protocol IDESourceExpressionSource <DVTSourceExpressionSource>
- (BOOL)expressionContainsExecutableCode:(id)arg1;
- (BOOL)isExpressionFunctionOrMethodCall:(id)arg1;
- (BOOL)isExpressionInFunctionOrMethodBody:(id)arg1;
- (BOOL)isExpressionFunctionOrMethodDefinition:(id)arg1;
- (BOOL)isExpressionWithinComment:(id)arg1;
- (void)symbolsForExpression:(id)arg1 inQueue:(struct dispatch_queue_s *)arg2 completionBlock:(id)arg3;

@optional
- (id)importStringInExpression:(id)arg1;
@end

@protocol IDEVariablesViewContentProvider <NSObject>
@property(readonly) id nodeSortComparator;
@property(readonly) id <IDEVariablesViewContextMenuDelegate> contextMenuDelegate;
- (id)contextNameForNode:(id)arg1;
- (id)imageForNode:(id)arg1;
- (BOOL)deleteNode:(id)arg1;
- (void)invalidate;
- (void)provideScopeChoices:(id)arg1;
- (void)providerWasInstalledForVariablesView:(id)arg1;

@optional
- (id)scopePopUpTitleForScopeItem:(long long)arg1;
@end

@protocol IDEVariablesViewContextMenuDelegate <NSObject>
- (void)provideHelpMenuItem:(id)arg1;
- (void)providePrimaryMenuItems:(id)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(id)arg1 isValidObject:(id)arg2;
- (void)control:(id)arg1 didFailToValidatePartialString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(id)arg1 onScreen:(id)arg2;
- (void)menu:(id)arg1 willHighlightItem:(id)arg2;
- (void)menuDidClose:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
@end

@protocol NSObject
- (id)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemWillCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;
- (void)outlineViewSelectionIsChanging:(id)arg1;
- (void)outlineViewColumnDidResize:(id)arg1;
- (void)outlineViewColumnDidMove:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(id)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)outlineView:(id)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(id)arg4;
- (id)outlineView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 item:(id)arg3;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)outlineView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
@end

@protocol NSPopoverDelegate <NSObject>

@optional
- (void)popoverDidClose:(id)arg1;
- (void)popoverWillClose:(id)arg1;
- (void)popoverDidShow:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (id)detachableWindowForPopover:(id)arg1;
- (BOOL)popoverShouldClose:(id)arg1;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (id)tableView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)tableView:(id)arg1 updateDraggingItemsForDrag:(id)arg2;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(id)arg4;
- (id)tableView:(id)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(id)arg1;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (long long)tableView:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(id)arg4;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)tableView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (id)undoManagerForTextView:(id)arg1;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2;
- (id)textView:(id)arg1 URLForContentsOfTextAttachment:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)textView:(id)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 results:(id)arg5 orthography:(id)arg6 wordCount:(long long)arg7;
- (id)textView:(id)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(id)arg3 types:(unsigned long long *)arg4;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(id)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)textView:(id)arg1 willDisplayToolTip:(id)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;
- (BOOL)textView:(id)arg1 shouldChangeTextInRanges:(id)arg2 replacementStrings:(id)arg3;
- (id)textView:(id)arg1 willChangeSelectionFromCharacterRanges:(id)arg2 toCharacterRanges:(id)arg3;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(id)arg1 writeCell:(id)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(id)arg4 type:(id)arg5;
- (id)textView:(id)arg1 writablePasteboardTypesForCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol XCDataTipSource
- (BOOL)outlineHoverView:(id)arg1 itemWillExpandLater:(id)arg2;
- (BOOL)outlineViewShouldIgnoreMouseEvents:(id)arg1;
- (BOOL)outlineHoverView:(id)arg1 handleMouseDown:(id)arg2 row:(long long)arg3 column:(long long)arg4 item:(id)arg5;
- (BOOL)outlineHoverView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineHoverView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (void)outlineHoverView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4 mouseIsOverItem:(BOOL)arg5;
- (BOOL)outlineHoverView:(id)arg1 shouldExpandItem:(id)arg2;
- (id)outlineHoverView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineHoverView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineHoverView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineHoverView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)cancelDataTip;
- (double)outlineHoverView:(id)arg1 heightOfRowByItem:(id)arg2;
- (double)outlineViewWindowDefaultWidth:(id)arg1;
- (void)configureOutlineHoverView:(id)arg1;
@end

@interface DBGThreadsStacksContentDelegate : NSObject <IDEDebugNavigableContentDelegate>
{
    DBGDebugSession *_debugSession;
    NSString *_associatedProcessUUID;
    IDEDebugNavigator *_debugNavigator;
    IDENavigatorOutlineView *_outlineView;
    IDENavigatorDataCell *_queueHeaderCell;
    IDENavigatorDataCell *_threadHeaderCell;
    IDENavigatorDataCell *_memoryDataGroupHeaderCell;
    DBGNavigatorCompressedDataCell *_compressedCell;
    NSMenuItem *_threadMenuItem;
    DBGThread *_currentThreadForFutureSelection;
    DBGStackFrame *_currentStackFrameForFutureSelection;
    BOOL _isInShouldHideThreads;
    id <DVTObservingToken> _threadsObservingToken;
    id <DVTObservingToken> _autoRefreshStackFramesObservingToken;
    id <DVTObservingToken> _currentStackFrameObservingToken;
    id <DVTObservingToken> _processNavigableItemObservingToken;
    id <DVTObservingToken> _memoryDatasForProcessToken;
}

+ (id)keyPathsForValuesAffectingProcessNavigableItem;
@property(readonly) IDEDebugNavigator *debugNavigator; // @synthesize debugNavigator=_debugNavigator;
@property(readonly) NSString *associatedProcessUUID; // @synthesize associatedProcessUUID=_associatedProcessUUID;
@property(retain) DBGDebugSession *debugSession; // @synthesize debugSession=_debugSession;
- (void)_threadContextuallyClicked;
- (id)minCompressionButtonTooltip;
- (id)compressionSliderTooltip;
- (id)maxCompressionButtonTooltip;
- (id)showOnlyInterestingContentButtonTooltip;
- (void)contextualMenuNeedsUpdate:(id)arg1;
- (BOOL)validateUserInterfaceAction:(SEL)arg1 forRepresentedObject:(id)arg2;
- (BOOL)validateUserInterfaceAction:(SEL)arg1;
- (id)representedObjectsToReveal;
- (id)pasteboardStringForRepresentedObject:(id)arg1;
- (void)handleUserDirectDeleteRepresentedObject:(id)arg1;
- (BOOL)shouldHandleUserDirectMoveUpOrDown:(BOOL)arg1 forRepresentedObject:(id)arg2 newRow:(long long *)arg3;
- (void)_appendDisplayStringForCopiedOrDraggedStackFrame:(id)arg1 toString:(id)arg2;
- (void)updateForNewCompressionValue:(id)arg1;
- (void)updateForNewShowOnlyInterestingContent:(id)arg1;
- (void)updateForNewThreadOrQueueMode:(id)arg1;
- (void)_shouldHideThreads:(id)arg1 processItem:(id)arg2;
- (id)expandableItemsForProcessItem:(id)arg1;
- (id)tokenForExpandedRepresentedObject:(id)arg1;
- (void)didCollapseForItem:(id)arg1;
- (void)didExpandForItem:(id)arg1;
- (void)willExpandForItem:(id)arg1;
- (BOOL)isGroupHeaderForRepresentedObject:(id)arg1 item:(id)arg2;
- (id)launchSessionForSelectedRepresentedObject:(id)arg1;
- (void)openSelectedRepresentedObject:(id)arg1 withEventType:(unsigned long long)arg2;
- (BOOL)shouldSelectItemForRepresentedObject:(id)arg1 withPrevious:(id)arg2 next:(id)arg3;
- (double)heightOfRowForRepresentedObject:(id)arg1;
- (id)controllerForQueryingDescendantItem;
- (id)dataCellForRepresentedObject:(id)arg1;
- (id)_compressedCell;
- (id)memoryDataGroupHeaderCell;
- (id)threadHeaderCell;
- (id)queueHeaderCell;
- (void)willDisplayCell:(id)arg1 forRepresentedObject:(id)arg2 item:(id)arg3;
- (void)_handleThreadsChange;
- (void)debugNavigatorViewWillUninstall;
- (void)debugNavigatorViewDidInstall;
- (void)_memoryDatasForProcessDidChange:(id)arg1;
- (void)_handleCurrentStackFrameChange;
- (void)_handleSettingCurrentStackFrame;
- (void)_handleThreadsAutoRefreshStackFramesDone;
- (void)_handleSettingCurrentStackFrame:(id)arg1 thread:(id)arg2;
- (void)_ensureSelectionForParent:(id)arg1 scrollToSelection:(BOOL)arg2;
@property(readonly) IDEWorkspaceTabController *workspaceTabController;
@property(readonly) DBGProcessNavigableItem *processNavigableItem;
- (id)_allThreadItemsForProcessItem:(id)arg1;
@property(readonly) IDENavigableItem *rootNavigableItem;
- (id)initWithProcess:(id)arg1 debugNavigator:(id)arg2;

@end

@interface DBGInstructionPointerAnnotationProvider : DVTAnnotationProvider
{
    IDEAnnotationContext *_context;
    NSMapTable *_annotationForLocation;
    NSMutableSet *_nonSelectedPCAnnotations;
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
@property(retain) IDEAnnotationContext *context; // @synthesize context=_context;
- (BOOL)_doesURLResolveToContextURL:(id)arg1;
- (BOOL)_shouldCreateAnnotationForLocation:(id)arg1;
- (void)_removeAnnotationForLocation:(id)arg1;
- (void)_createAnnotationForInstructionPointerLocation:(id)arg1;
- (void)_handleInstructionPointerLocationChanged:(id)arg1;
- (void)_updateNonPrimaryPCs:(id)arg1;
- (id)_initWithContext:(id)arg1;
- (id)init;

@end

@interface DBGInstructionPointerAnnotation : DVTMessageBubbleAnnotation <DVTMessageBubbleAnnotationDelegate>
{
    NSDocument *_document;
    BOOL _wasVisibleFlag;
    DBGDebugSession *_debugSession;
    id <DVTObservingToken> _theadNameObserverToken;
    id <DVTObservingToken> _uniqueIDObserverToken;
    id <DVTObservingToken> _lastReasonStoppedObserverToken;
}

+ (id)_createAnnotationTheme;
+ (struct CGSize)instructionPointerImageSize;
+ (id)instructionPointerImage;
@property(retain) DBGDebugSession *debugSession; // @synthesize debugSession=_debugSession;
- (id)annotationDisplayDescription;
- (id)annotationDisplayName;
- (void)didMoveAnnotation:(id)arg1;
- (struct CGRect)sidebarMarkerRectForFirstLineRect:(struct CGRect)arg1;
- (void)fontAndColorThemeChanged:(id)arg1;
- (void)_updateMessageBubbleText;
- (void)setRepresentedObject:(id)arg1;
- (id)initWithDocument:(id)arg1 location:(id)arg2 stackFrame:(id)arg3;

@end

@interface DBGOtherThreadIPAnnotation : DBGInstructionPointerAnnotation
{
}

- (id)initWithDocument:(id)arg1 location:(id)arg2 stackFrame:(id)arg3;
- (void)_updateLocation;

@end

@interface DBGDebugSessionController : NSObject <IDEDebugSessionController>
{
    IDEWorkspaceTabController *_workspaceTabController;
    DBGDebugSession *_debugSession;
    DBGDataTipController *_dataTipController;
    id <DVTObservingToken> _currentStackFrameFramePointerObservingToken;
}

+ (id)descendantItemForRepresentedObject:(id)arg1 inRootNavigableItem:(id)arg2;
+ (id)_descendantItemForRepresentedObject:(id)arg1 inRootNavigableItem:(id)arg2;
+ (id)logAspect;
@property(readonly) DBGDataTipController *dataTipController; // @synthesize dataTipController=_dataTipController;
@property(readonly) id <IDEDebugSession> debugSession; // @synthesize debugSession=_debugSession;
- (void)requestPermissionForPoOfDataValue:(id)arg1;
- (void)_showAlertForError:(id)arg1;
- (void)requestPONotification:(id)arg1;
- (void)openMemoryData:(id)arg1 withEventType:(unsigned long long)arg2;
- (void)openMemoryBrowser;
- (void)mouseExitedSidebarLineArea;
- (void)mouseOverSidebarAtLocation:(id)arg1 withinBlockAtRange:(struct _NSRange)arg2 withScreenFrame:(struct CGRect)arg3;
- (void)setSelectedNavigableItemFromUserInterface:(id)arg1;
@property(readonly) BOOL showDisassemblyWhenDebugging;
- (void)_handleShowDisassemblyWhenDebuggingChanged;
- (void)_handleDebugSessionStateChanged;
- (void)_handleFinishedRunPausesAlert;
- (void)_handleWatchpointHit:(id)arg1;
- (void)_handleTargetProcessRunStateChanged;
- (void)_navigateToPossiblyNonExistentURL:(id)arg1 withStackFrame:(id)arg2 withEventType:(unsigned long long)arg3;
- (void)_navigateToURL:(id)arg1 withStackFrame:(id)arg2 withEventType:(unsigned long long)arg3;
- (void)_navigateEditorToDisassemblyForStackFrame:(id)arg1;
- (void)_navigateEditorToStackFramesSourceFile:(id)arg1;
- (void)_handleCurrentStackFrameChanged;
- (void)_updateFileBreakpointsLocation;
- (void)_navigateEditorToCurrentStackFrame;
- (id)initWithLaunchSession:(id)arg1 workspaceTabController:(id)arg2;

@end

@interface DBGDataTipController : NSObject
{
    IDEWorkspaceTabController *_workspaceTabController;
    DBGDebugSession *_debugSession;
    struct CGPoint _lastHandledMouseLocation;
    struct CGPoint _lastDataTipedMouseLocation;
    id <IDESourceExpressionSource> _expressionSource;
    id <DVTObservingToken> _mainKeyViewObserver;
    DVTSourceExpression *_currentMousedOverExpression;
    DBGFloatingControlWindow *_dataTipWindow;
    XCDataTipTable *_dataTipViewController;
    NSWindow *_window;
    BOOL _dataTipFromSidebar;
    BOOL _inMouseoverExpressionChanged;
    id _mouseMonitor;
    DVTSourceExpression *_pendingExpression;
}

+ (BOOL)mouseOverDataTipContext;
+ (BOOL)mouseOverDataTip:(BOOL)arg1;
+ (BOOL)mouseOverDataTipInWindow:(id)arg1 includeBuffer:(BOOL)arg2;
+ (BOOL)_mouseOverDataTipInWindow:(id)arg1 includeBuffer:(BOOL)arg2 mouseLocation:(struct CGPoint)arg3;
+ (BOOL)mouseOverWindow:(id)arg1;
+ (void)getInfoForAction:(int)arg1 image:(id *)arg2 selector:(SEL *)arg3;
+ (id)logAspect;
@property(retain) DVTSourceExpression *pendingExpression; // @synthesize pendingExpression=_pendingExpression;
@property(retain) DVTSourceExpression *currentMousedOverExpression; // @synthesize currentMousedOverExpression=_currentMousedOverExpression;
@property(retain, nonatomic) id <IDESourceExpressionSource> expressionSource; // @synthesize expressionSource=_expressionSource;
@property(readonly) DBGDebugSession *debugSession; // @synthesize debugSession=_debugSession;
- (void)_evaluateExpression:(id)arg1;
- (void)_stepOver:(id)arg1 toLocation:(id)arg2;
- (void)_stepUntil:(id)arg1 toLocation:(id)arg2;
- (void)_stepOutOf:(id)arg1;
- (void)_stepInto:(id)arg1;
- (void)_handleTipAction:(int)arg1 forExpression:(id)arg2 location:(id)arg3 atFrame:(struct CGRect)arg4;
- (void)_dataValueDidUpdate:(id)arg1 forExpression:(id)arg2 atFrame:(struct CGRect)arg3;
- (void)_handleDataTip:(id)arg1 atFrame:(struct CGRect)arg2;
- (void)_monitorMouseEvents;
- (id)dataTipViewController;
- (void)closeDataTipWindow;
- (void)_mouseoverExpressionChanged;
- (void)_expressionSelectionSourceChanged;
- (void)mouseExitedSidebarLineArea;
- (void)mouseOverSidebarAtLocation:(id)arg1 withinBlockAtRange:(struct _NSRange)arg2 withScreenFrame:(struct CGRect)arg3;
- (void)revealConsoleArea;
@property(readonly) BOOL showingDataTip;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithDebugSession:(id)arg1 workspaceTabController:(id)arg2;

@end

@interface DBGDataTipsDotView : NSView
{
    long long _tag;
    BOOL _inside;
    int _type;
    id _actionBlock;
}

+ (double)controlDimension;
- (BOOL)isHighlighted;
- (void)setHighlighted:(BOOL)arg1;
- (int)type;
- (void)setType:(int)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)addActionButtonWithImage:(id)arg1 andActionBlock:(id)arg2;
- (void)_callActionBlock:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)addSubview:(id)arg1;
- (void)_checkDataTipEvent:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DBGFloatingControlWindow : NSWindow
{
    BOOL _canBecomeKey;
    NSWindow *_contextWindow;
    id _windowCloseToken;
}

- (void)displayContextRect:(struct CGRect)arg1 showOutline:(BOOL)arg2;
- (id)contextWindow;
- (BOOL)wantsScrollWheelEvent:(id)arg1;
- (BOOL)canBecomeKeyWindow;
- (void)setCanBecomeKey:(BOOL)arg1;
- (id)rootWindow;
- (void)resetChildChain;
- (void)printSubDataValues:(long long)arg1;
- (void)_cleanUpAfterClosingWindow;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface DBGRoundedBox : NSView
{
    NSColor *_color;
    double *_pattern;
    long long _count;
    double _phase;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setLineDash:(double *)arg1 count:(long long)arg2 phase:(double)arg3;
- (void)setColor:(id)arg1;
- (void)dealloc;

@end

@interface XCDataTipOutlineViewCell : NSTextFieldCell
{
}

- (id)highlightColorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface XCDataTipTable : NSObject <XCDataTipSource>
{
    XCOutlineHoverView *_variablesView;
    NSTableColumn *_typeColumn;
    NSTableColumn *_summaryColumn;
    NSScrollView *_scrollView;
    NSArray *_dataValues;
    DBGDataValue *_containerDV;
    long long _containerChildCount;
    NSTextField *_viewAsSheetValueTextField;
    NSTextField *_viewAsSheetTypeExpressionTextField;
    NSPanel *_viewAsSheet;
    NSMutableSet *_dataValueWatchers;
    DVTMapTable *_dataValuesToObservationTokens;
    NSMutableSet *_pendingDVsForSettingFormatSet;
    NSMutableArray *_childrenToExpand;
    DBGDataValue *_editedDV;
    NSImage *_spyglassImage;
    XCOutlineHoverView *_viewToExpand;
    id _itemToExpand;
    NSMenu *_contextualMenu;
    id _pendingDVPathForViewAsMemory;
    id _pendingDVPathForOpenInWindow;
    id _pendingDVPathForCreateAsWatchpoint;
    id _clickedItemNotRetained;
    id _owningController;
    NSMutableDictionary *_sortingCaches;
    int _sortType;
}

+ (void)_setShowsFormattedSummaryUserDefault:(BOOL)arg1;
+ (BOOL)_showsFormattedSummaryUserDefault;
+ (void)_setShowsTypeUserDefault:(BOOL)arg1;
+ (BOOL)_showsTypeUserDefault;
+ (id)appendToMAS:(id)arg1 string:(id)arg2 addingAttributes:(id)arg3;
+ (id)sortArray:(id)arg1 usingType:(int)arg2;
+ (id)childrenHidden;
+ (id)childrenShowing;
+ (id)valueAttributes;
+ (id)typeAttributes;
+ (id)nameAttributes;
+ (id)typeColumnFont;
+ (id)standardColumnFont;
+ (id)nameColumnFont;
+ (double)multiplicationFactor;
+ (id)backgroundSelectColor;
+ (id)backgroundHoverColor;
+ (id)textEntryBackgroundColor;
+ (id)backgroundColor;
+ (id)convertToDefaultSize:(id)arg1;
+ (double)currentFontSize;
+ (id)defaultModuleNibName;
+ (id)MenuTableColumnIdentifier;
+ (void)_resetFonts;
+ (id)_outOfScopeString;
+ (void)initialize;
@property int sortType; // @synthesize sortType=_sortType;
- (void)_openDocumentation:(id)arg1;
- (void)_openDefinition:(id)arg1;
- (void)_createWatchpoint:(id)arg1;
- (void)_viewAsMemory:(id)arg1;
- (void)_openInWindow:(id)arg1;
- (void)_printDescription:(id)arg1;
- (void)_setSortBy:(id)arg1;
- (void)_setValueFormatAction:(id)arg1;
- (void)_toggleAutoExpandBehavior:(id)arg1;
- (void)_toggleUseDataFormatters:(id)arg1;
- (void)_showTypeColumn:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_takeDownDTUINow;
- (void)_menuEndedTracking;
- (BOOL)outlineViewShouldIgnoreMouseEvents:(id)arg1;
- (BOOL)outlineHoverView:(id)arg1 handleMouseDown:(id)arg2 row:(long long)arg3 column:(long long)arg4 item:(id)arg5;
- (id)dataTipMenuForItem:(id)arg1;
- (double)outlineViewWindowDefaultWidth:(id)arg1;
- (double)outlineHoverView:(id)arg1 heightOfRowByItem:(id)arg2;
- (void)outlineHoverView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)outlineHoverView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineHoverView:(id)arg1 itemWillExpandLater:(id)arg2;
- (BOOL)outlineHoverView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineHoverView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (id)outlineHoverView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (id)outlineHoverView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineHoverView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)outlineHoverView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4 mouseIsOverItem:(BOOL)arg5;
- (BOOL)outlineHoverView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)openDocumentation:(id)arg1;
- (BOOL)openSymbolType:(id)arg1;
- (void)updateDataValue:(id)arg1;
- (void)updateFromContainerDataValue;
- (void)autoExpandChildren:(id)arg1;
- (void)updateUI;
- (void)_observeModelObject:(id)arg1;
- (void)_watchChangeOnObject:(id)arg1 atKeyPath:(id)arg2 withChangeBlock:(id)arg3;
- (void)_expandItemLater:(id)arg1 inView:(id)arg2;
- (void)setWatching:(BOOL)arg1 dataValue:(id)arg2;
- (id)dataValueForWatchpointExpression:(id)arg1;
@property(retain) NSArray *containedDataValues;
- (id)selectedDataValues;
- (id)_pendingDVsForSettingFormatSet;
- (void)cancelDataTip;
- (void)releaseCaches;
- (id)localModuleActions;
- (void)refreshDisplay;
- (void)setNameColumnTitle:(id)arg1;
- (id)columnForIdentifier:(id)arg1;
- (void)configureOutlineHoverView:(id)arg1;
@property(retain) DBGDataTipController *owningController;
- (id)variablesView;
- (id)_sortedChildren:(id)arg1 ofItem:(id)arg2;

@end

@interface XCDataTipTopJustifiedDisclosureCell : NSButtonCell
{
    BOOL _isNotExpandable;
}

- (id)backgroundColor;
- (id)highlightColorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setIsExpandable:(BOOL)arg1;

@end

@interface XCOutlineHoverViewEntryCell : NSTextFieldCell
{
    NSAttributedString *_highlightPlaceholderString;
}

@property(retain) NSAttributedString *highlightPlaceholderString; // @synthesize highlightPlaceholderString=_highlightPlaceholderString;
- (id)highlightColorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface XCOutlineHoverView : NSTableView <NSTableViewDataSource, NSTableViewDelegate>
{
    id <XCDataTipSource> _masterDataSource;
    id _rootItem;
    id _expandedItem;
    DBGFloatingControlWindow *_expandedItemWindow;
    NSMutableArray *_trackingRects;
    struct CGRect _newFrame;
    struct CGRect _dirtyRegion;
    NSMutableDictionary *_cachedExpansionWindows;
    long long _rowBeneathCursor;
    NSColor *_mouseOverColor;
}

+ (BOOL)_adjustWindowFrame:(struct CGRect *)arg1 forOutlineHoverView:(id)arg2;
+ (void)_adjustWindowFrameWidth:(struct CGRect *)arg1 forOutlineHoverView:(id)arg2;
+ (id)showDataTipForItem:(id)arg1 fromMaster:(id)arg2 atScreenLocation:(struct CGPoint)arg3;
+ (id)ExpansionTableColumnIdentifier;
- (id)_highlightColorForCell:(id)arg1;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (long long)rowBeneathCursor;
- (void)scrollWheel:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_informMDSOfHoverItem:(struct CGPoint)arg1 clear:(BOOL)arg2;
- (void)addDirtyRegion:(struct CGRect)arg1;
- (void)_redrawDirtyRects;
- (void)_mouseHoverToExpandEvent:(id)arg1;
- (void)resetTrackingRects;
- (void)_invalidateAllRevealovers;
- (struct CGRect)adjustScroll:(struct CGRect)arg1;
- (void)adjustWithTile;
- (void)viewDidMoveToWindow;
- (BOOL)tableView:(id)arg1 handleMouseDown:(id)arg2 row:(long long)arg3 column:(long long)arg4;
- (BOOL)abortEditing;
- (void)textDidEndEditing:(id)arg1;
- (void)editColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 select:(BOOL)arg4;
- (void)tableView:(id)arg1 willAbortEditingColumn:(long long)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willEndEditingColumn:(long long)arg2 row:(long long)arg3 textMovement:(unsigned long long)arg4;
- (void)tableView:(id)arg1 didStartEditingColumn:(long long)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (long long)levelForRow:(long long)arg1;
- (void)collapseItem:(id)arg1 collapseChildren:(BOOL)arg2;
- (void)collapseItem:(id)arg1;
- (void)expandItem:(id)arg1 expandChildren:(BOOL)arg2;
- (void)expandItem:(id)arg1;
- (BOOL)isItemExpanded:(id)arg1;
- (long long)rowForItem:(id)arg1;
- (id)itemAtRow:(long long)arg1;
- (void)adjustWidthOfColumn:(id)arg1 toWidth:(double)arg2;
- (void)setRootItem:(id)arg1;
- (id)mouseOverColor;
- (void)setMouseOverColor:(id)arg1;
- (id)masterDataSource;
- (void)setMasterDataSource:(id)arg1;
- (id)_columnForIdentifier:(id)arg1;
- (void)_reloadData:(id)arg1;

@end

@interface DBGVariablesViewContentProvider : NSObject <IDEVariablesViewContextMenuDelegate, IDEVariablesViewContentProvider>
{
    IDEVariablesView *_variablesView;
    NSPopover *_currentPopover;
    BOOL _requestedAutos;
    NSArray *_arguments;
    NSArray *_locals;
    NSArray *_fileStatics;
    NSArray *_registers;
    NSMutableArray *_expressions;
    NSMutableDictionary *_variablesAskedForByNameToDataValue;
    NSMutableSet *_varialbesBeingAskedForByName;
    NSSet *_autosSymbols;
    BOOL _showsLocals;
    BOOL _showsArguments;
    BOOL _showsFileStatics;
    BOOL _showsRegisters;
    BOOL _showsCustomExpressions;
    DBGDebugSession *_debugSession;
    id <DVTObservingToken> _debugSessionObserverToken;
    id <DVTObservingToken> _argumentsObserverToken;
    id <DVTObservingToken> _localsObserverToken;
    id <DVTObservingToken> _fileStaticsObserverToken;
    id <DVTObservingToken> _registersObserverToken;
    id <DVTObservingToken> _selectedScopeTagObserverToken;
}

+ (id)_sortComparator;
+ (id)keyPathsForValuesAffectingCurrentStackFrame;
@property(retain) NSArray *registers; // @synthesize registers=_registers;
@property(retain) NSArray *fileStatics; // @synthesize fileStatics=_fileStatics;
@property(retain) NSArray *locals; // @synthesize locals=_locals;
@property(retain) NSArray *arguments; // @synthesize arguments=_arguments;
@property(nonatomic) BOOL showsCustomExpressions; // @synthesize showsCustomExpressions=_showsCustomExpressions;
@property(nonatomic) BOOL showsRegisters; // @synthesize showsRegisters=_showsRegisters;
@property(nonatomic) BOOL showsFileStatics; // @synthesize showsFileStatics=_showsFileStatics;
@property(nonatomic) BOOL showsArguments; // @synthesize showsArguments=_showsArguments;
@property(nonatomic) BOOL showsLocals; // @synthesize showsLocals=_showsLocals;
@property(retain) DBGDebugSession *debugSession; // @synthesize debugSession=_debugSession;
- (void)provideHelpMenuItem:(id)arg1;
- (void)providePrimaryMenuItems:(id)arg1;
- (id)scopePopUpTitleForScopeItem:(long long)arg1;
- (void)_handleSelectedScopeChange;
- (id)contextNameForNode:(id)arg1;
- (id)imageForNode:(id)arg1;
- (BOOL)deleteNode:(id)arg1;
- (void)invalidate;
- (void)provideScopeChoices:(id)arg1;
- (void)providerWasInstalledForVariablesView:(id)arg1;
- (void)_updateDueToVisibilityChange:(id)arg1;
@property(readonly) id nodeSortComparator;
@property(readonly) id <IDEVariablesViewContextMenuDelegate> contextMenuDelegate;
- (void)_addHelpMenuToMenu:(id)arg1;
- (void)_addViewMemoryOfVariableMenuItemToMenu:(id)arg1 selectedVariable:(id)arg2;
- (void)_addWatchVariableMenuItemToMenu:(id)arg1 selectedVariable:(id)arg2;
- (void)_addDeleteExpressionMenuItemToMenu:(id)arg1 selectedVariables:(id)arg2;
- (void)_addAddOrEditExpressionMenuItemToMenu:(id)arg1 selectedVariables:(id)arg2;
- (void)_addEditSummaryFormatMenuItemToMenu:(id)arg1 selectedVariables:(id)arg2;
- (void)_addEditValueMenuItemToMenu:(id)arg1 selectedVariables:(id)arg2;
- (void)_addViewValueAsCustomTypeMenuItemToMenu:(id)arg1 selectedVariables:(id)arg2;
- (void)_addViewValueAsMenuToMenu:(id)arg1 selectedVariables:(id)arg2;
- (void)_addCopyMenuItemToMenu:(id)arg1 selectedVariables:(id)arg2;
- (void)_addPrintDescriptionMenuItemToMenu:(id)arg1 selectedVariable:(id)arg2;
- (BOOL)_expressionIsForAllStackFrames:(id)arg1;
- (void)_deleteExpressionNode:(id)arg1;
- (id)_addExpression:(id)arg1 forAllStackFrames:(BOOL)arg2;
- (id)_customExpressions;
- (unsigned long long)_convertCurrentStackFramesLineNumberToEditorDocumentLineNumber:(id)arg1;
- (id)_locationToUseForAutoSymbolsRequestInEditorDocument:(id)arg1;
- (BOOL)_updateAutoValues;
- (void)_updateFilteredList;
- (id)_wrapOrFetchDataValueWithName:(id)arg1 locationToFetchRelativeTo:(id)arg2 asNodeType:(unsigned long long)arg3;
- (id)_wrapDataValueWithName:(id)arg1 fromList:(id)arg2 asNodeType:(unsigned long long)arg3;
- (id)_wrapSelfOrThisDataValue;
- (id)_createVariableNodesFromDataValues:(id)arg1 type:(unsigned long long)arg2;
- (id)_createNodeFromIndexSymbol:(id)arg1 selfOrThisDataValue:(id)arg2;
- (id)_manualVariablesList;
- (id)_autoVariablesList;
- (void)_filteredListNeedsUpdating;
@property(readonly) NSString *contextNameForCurrentStackFrame;
@property(readonly) NSString *globalContextName;
- (id)_contextMenuSelectedValues;
- (void)changeDataValueFormat:(id)arg1;
- (void)viewPointeeInMemoryBrowser:(id)arg1;
- (void)viewInMemoryBrowser:(id)arg1;
- (void)editValue:(id)arg1;
- (void)watchVariable:(id)arg1;
- (void)deleteExpressions:(id)arg1;
- (void)_showPopover:(id)arg1 attachedToRow:(long long)arg2;
- (void)addOrEditExpression:(id)arg1;
- (void)editSummaryFormat:(id)arg1;
- (void)viewValueAsCustomType:(id)arg1;
- (void)printDescription:(id)arg1;
@property(readonly) DBGStackFrame *currentStackFrame;
- (void)_handleCurrentStackFrameFramePointerChanged;

@end

@interface DBGThreadNavigableItem : IDEKeyDrivenNavigableItem
{
    long long _compressionValue;
    long long _maxCompressionValue;
    NSArray *_cachedChildRepresentedObjects;
    NSIndexSet *_lastCompressedIndexSet;
}

- (BOOL)setCompressionValue:(long long)arg1 maxCompressionValue:(long long)arg2;
- (void)invalidateChildItems;
- (void)updateChildItemsForChangeKind:(unsigned long long)arg1 atIndexes:(id)arg2;
- (id)childRepresentedObjects;
- (id)image;
- (id)name;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface DBGCompressedStackFrameNavigableItem : IDEKeyDrivenNavigableItem
{
}

- (id)initWithStackFrames:(id)arg1 parent:(id)arg2;

@end

@interface DBGCompressedStackFrame : NSObject <IDEDebugNavigableModel>
{
    NSArray *_representedStackFrames;
}

@property(readonly) NSArray *representedStackFrames; // @synthesize representedStackFrames=_representedStackFrames;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly) NSString *associatedProcessUUID;
- (BOOL)isGroupHeader:(id)arg1;
@property(readonly) NSNumber *frameNumber;
- (id)initWithStackFrames:(id)arg1;

@end

@interface DBGNavigatorCompressedDataCell : DVTImageAndTextCell
{
    NSColor *_color;
}

@property(copy) NSColor *color; // @synthesize color=_color;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)init;
- (void)_ide_commonInit;

@end

@interface DBGVariableCompositeCell : IDEVariablesViewSingleColumnCell
{
}

- (id)_attributedStringForInvalidExpression;
- (id)_attributedStringForLoadingExpression;
- (id)_attributedStringForEnterExpression;
- (id)calculateFullAttributedString;
- (id)_attributedFormattedSummaryForDataValue:(id)arg1;
- (id)calculateSummaryAttributedString;

@end

@interface DBGSummaryFormatterEditor : NSViewController
{
    NSTextField *_formatField;
    NSImageView *_validityImage;
    NSTextField *_validityLabel;
    NSString *_displayedSummaryFormat;
    DBGDataValue *_dataValue;
    NSArray *_types;
    DBGDataType *_selectedType;
    BOOL _isValid;
    NSString *_initialFormat;
    id _doneButtonHandler;
    NSButton *_doneButton;
    NSPopover *_popover;
}

@property NSPopover *popover; // @synthesize popover=_popover;
@property NSButton *doneButton; // @synthesize doneButton=_doneButton;
@property(copy) id doneButtonHandler; // @synthesize doneButtonHandler=_doneButtonHandler;
@property BOOL isValid; // @synthesize isValid=_isValid;
@property(retain) DBGDataType *selectedType; // @synthesize selectedType=_selectedType;
@property(retain) NSArray *types; // @synthesize types=_types;
@property(copy) NSString *displayedSummaryFormat; // @synthesize displayedSummaryFormat=_displayedSummaryFormat;
@property(readonly) DBGDataValue *dataValue; // @synthesize dataValue=_dataValue;
- (void)doneButtonPressed:(id)arg1;
- (void)revert;
- (void)_updateSummaryFormatValidity;
- (id)_summaryFormatFromSelectedType;
- (void)_handleUserEnteredSummaryFormatChanged;
@property(readonly) BOOL shouldShowPopUpButton;
- (void)loadView;
- (id)initForDataVale:(id)arg1;

@end

@interface DBGQuotedStringTransformer : NSValueTransformer
{
}

- (id)transformedValue:(id)arg1;

@end

@interface DBGGlassBarView : DVTBorderedView
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DBGConsoleLogEditor : IDEEditor <DVTTextFindable, DVTFindBarFindable, DVTCompletingTextViewDelegate>
{
    IDEConsoleTextView *_textView;
    id <DVTObservingToken> _consoleLogItemsObserverToken;
}

+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
@property(readonly) IDEConsoleTextView *textView; // @synthesize textView=_textView;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (void)revertStateWithDictionary:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)_handleConsoleItemsChanged:(id)arg1;
- (void)_documentDidUpdate;
- (void)invalidate;
- (BOOL)canBecomeMainViewController;
- (void)loadView;

// Remaining properties
@property unsigned long long supportedMatchingOptions;

@end

@interface DBGConsoleLogDocument : IDEEditorDocument
{
    DBGConsoleLog *_consoleLog;
    NSTextStorage *_textStorage;
    BOOL _setUpPrintInfoDefaults;
}

+ (id)writableTypes;
+ (BOOL)shouldUnlockFileURLBeforeMakingChanges;
@property(retain) NSTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(readonly) DBGConsoleLog *consoleLog; // @synthesize consoleLog=_consoleLog;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)saveDocument:(id)arg1;
- (id)writableTypesForSaveOperation:(unsigned long long)arg1;
- (id)dataOfType:(id)arg1 error:(id *)arg2;
- (int)readOnlyStatus;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (id)printInfo;
- (id)displayName;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface DBGConsoleLog : IDEActivityLogSection <DVTSimpleSerialization>
{
    NSMutableArray *_logConsoleItems;
}

+ (id)defaultLogSectionDomainType;
+ (void)initialize;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)navigableItem_documentType;
- (void)addConsoleItem:(id)arg1;
- (id)initLogWithTitle:(id)arg1 serializationPath:(id)arg2;

// Remaining properties
@property(readonly) NSArray *logConsoleItems; // @dynamic logConsoleItems;
@property(retain) NSMutableArray *mutableLogConsoleItems; // @dynamic mutableLogConsoleItems;

@end

@interface DBGConsoleLogProvider : IDELogProvider
{
    IDEWorkspace *_workspace;
    id <DVTObservingToken> _launchSessionsStateObserverToken;
    id <DVTObservingToken> _launchSessionsConsoleAdaptorsObserverToken;
    NSMapTable *_terminationTokenForConsoleAdaptorTable;
    NSMapTable *_logSectionForLaunchSessionTable;
    NSMapTable *_consoleAdaptorsForLaunchSessionTable;
    IDELogStore *_logStore;
}

+ (id)keyPathsForValuesAffectingLogRecords;
+ (id)_logStorePrefix;
- (void)_handleConsoleItemAdded:(id)arg1;
- (void)_handleConsoleAdaptorOutputTerminated:(id)arg1;
- (id)domainIdentifier;
- (id)ideModelObjectTypeIdentifier;
- (void)_handleConsoleAdaptorRemoved:(id)arg1;
- (void)_removeConsoleAdaptor:(id)arg1;
- (void)_handleConsoleAdaptorAdded:(id)arg1;
- (void)_handleConsoleAdaptorsChanged:(id)arg1;
- (void)_handleLaunchSessionStateChanged:(id)arg1;
- (void)_handleLaunchSessionsChanged:(id)arg1;
- (void)invalidate;
- (id)logRecords;
- (id)initWithDomainItem:(id)arg1;

@end

@interface DBGProcessNavigableItem : IDEKeyDrivenNavigableItem
{
    NSArray *_cachedChildRepresentedObjects;
    NSArray *_threadOrQueue;
    DBGMemoryDataProcessWrapper *_memoryDataGroup;
    int _threadOrQueueMode;
    BOOL _hideAncestorForNonInterestingFrames;
}

+ (id)keyPathsForValuesAffectinImage;
+ (id)keyPathsForValuesAffectingName;
+ (id)_mainQueueName;
@property BOOL hideAncestorForNonInterestingFrames; // @synthesize hideAncestorForNonInterestingFrames=_hideAncestorForNonInterestingFrames;
@property(nonatomic) int threadOrQueueMode; // @synthesize threadOrQueueMode=_threadOrQueueMode;
@property(retain) DBGMemoryDataProcessWrapper *memoryDataGroup; // @synthesize memoryDataGroup=_memoryDataGroup;
- (void)invalidateChildItems;
- (id)childRepresentedObjects;
- (id)hideThreadsIfNeeded;
- (id)_generateChildrenFromThreads:(id)arg1;
- (BOOL)isLeaf;
- (id)subtitle;
- (id)image;
- (id)name;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface DBGBreakpointAnnotation : DVTTextAnnotation
{
    IDEWorkspaceWindowController *_workspaceWindowController;
    IDEBreakpointIcon *_icon;
    struct CGRect _lastRectDrawnIn;
}

@property(readonly) IDEWorkspaceWindowController *workspaceWindowController; // @synthesize workspaceWindowController=_workspaceWindowController;
@property struct CGRect lastRectDrawnIn; // @synthesize lastRectDrawnIn=_lastRectDrawnIn;
- (void)_updateLandmarkItemIfAppropriate;
- (void)adjustParagraphIndexBy:(long long)arg1 lengthBy:(long long)arg2;
- (void)resolveLocationIfNeededForTextStorage:(id)arg1;
- (id)annotationDisplayDescription;
- (id)annotationDisplayName;
- (void)_redisplay;
- (id)_iconForRect:(struct CGRect)arg1;
- (void)drawSidebarMarkerIconInRect:(struct CGRect)arg1 textView:(id)arg2;
- (struct CGRect)sidebarMarkerRectForFirstLineRect:(struct CGRect)arg1;
- (id)initWithWorkspaceWindowController:(id)arg1 breakpoint:(id)arg2 location:(id)arg3;

@end

@interface DBGBreakpointAnnotationProvider : DVTAnnotationProvider <DVTTextAnnotationDelegate>
{
    IDEAnnotationContext *_context;
    IDEWorkspaceWindowController *_workspaceWindowController;
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
@property(readonly) IDEAnnotationContext *context; // @synthesize context=_context;
- (void)_revealInBreakpointNavigator:(id)arg1;
- (void)_deleteBreakpoint:(id)arg1;
- (void)_editBreakpoint:(id)arg1;
- (void)_editBreakpointForAnnotation:(id)arg1 inTextSideBarView:(id)arg2;
- (id)_createRevealInBreakpointNavigatorMenuItem:(id)arg1;
- (id)_createDeleteBreakpointMenuItem:(id)arg1;
- (id)_createToggleBreakpointMenuItem:(id)arg1;
- (id)_createEditBreakpointMenuItem:(id)arg1 inTextSidebarView:(id)arg2;
- (id)contextMenuItemsForAnnotation:(id)arg1 inTextSidebarView:(id)arg2;
- (void)didClickAnnotation:(id)arg1 inTextSidebarView:(id)arg2 event:(id)arg3;
- (void)didDeleteOrReplaceParagraphForAnnotation:(id)arg1;
- (void)didMoveAnnotation:(id)arg1;
- (void)didRemoveAnnotation:(id)arg1;
- (id)_documentURL;
- (void)_removeBreakpointWithAnnotation:(id)arg1;
- (void)_removeAnnotationForBreakpoint:(id)arg1;
- (void)_addAnnotationForAddressBreakpoint:(id)arg1;
- (void)_addAnnotationForFileBreakpoint:(id)arg1;
- (void)_addAnnotationForBreakpoint:(id)arg1;
- (void)_handleBreakpointsChanged:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithContext:(id)arg1;
- (id)init;

@end

@interface DBGNavigableQueue : NSObject <IDEDebugNavigableModel>
{
    NSString *_name;
    NSString *_displayName;
    DBGProcess *_process;
    NSMutableArray *_threads;
}

+ (BOOL)_queueNameBelongsToConcurrentQueues:(id)arg1;
+ (void)initialize;
@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) NSString *name; // @synthesize name=_name;
- (BOOL)isGroupHeader:(id)arg1;
- (id)navigableItem_image;
- (id)navigableItem_subtitle;
- (id)navigableItem_name;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly) NSString *associatedProcessUUID;
- (id)initWithName:(id)arg1 displayName:(id)arg2 process:(id)arg3;

// Remaining properties
@property(readonly) NSMutableArray *mutableThreads; // @dynamic mutableThreads;
@property(copy) NSArray *threads; // @dynamic threads;

@end

@interface DBGMemoryBrowser : IDEHexEditor
{
    DVTBorderedView *_bottomToolBar;
    NSTextField *_addressTextField;
    NSButton *_freezeButton;
    NSPopUpButton *_numberOfBytes;
    NSPopUpButton *_byteGrouping;
}

+ (unsigned long long)defaultLineNumberFormat;
+ (id)lineNumberFormatStateKey;
+ (BOOL)_isAddressData64Bit:(unsigned long long)arg1;
+ (id)displayStringForAddress:(unsigned long long)arg1;
+ (id)keyPathsForValuesAffectingMemoryBrowserDocument;
- (void)_updateMemoryDataWithRelativeOffset:(long long)arg1;
- (void)nextOrPreviousPage:(id)arg1;
- (void)changeByteGrouping:(id)arg1;
- (void)numberOfBytesChanged:(id)arg1;
- (void)addressEntered:(id)arg1;
- (void)_handleMemoryDataUpdated;
@property(readonly) DBGMemoryBrowserDocument *memoryBrowserDocument;
- (void)loadView;

@end

@interface DBGMemoryBrowserDocument : IDEEditorDocument
{
    DBGMemoryData *_memoryData;
    DBGProcess *_process;
    NSString *_customDisplayName;
}

+ (BOOL)shouldUnlockFileURLBeforeMakingChanges;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(copy) NSString *customDisplayName; // @synthesize customDisplayName=_customDisplayName;
@property(retain) DBGMemoryData *memoryData; // @synthesize memoryData=_memoryData;
- (id)_memoryDataForURLParts:(id)arg1 inLaunchSession:(id)arg2;
- (id)_memoryDataForURLParts:(id)arg1 inWorkspace:(id)arg2;
- (id)_memoryDataForURL:(id)arg1;
- (int)readOnlyStatus;
- (id)displayName;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface DBGMemoryDataProcessWrapper : NSObject <IDEDebugNavigableModel>
{
    DBGProcess *_process;
    BOOL _useProcessIconAndName;
}

+ (id)keyPathsForValuesAffectingMemoryDatas;
@property(readonly) DBGProcess *process; // @synthesize process=_process;
- (unsigned long long)navigableItem_indexOfRepresentedObjectForIdentifier:(id)arg1 inRelationshipKeyPath:(id)arg2;
- (id)navigableItem_identifierForRepresentedObjectAtIndex:(unsigned long long)arg1 inRelationshipKeyPath:(id)arg2;
- (BOOL)isGroupHeader:(id)arg1;
- (id)navigableItem_image;
@property(readonly) NSString *navigableItem_name;
- (void)useProcessIconAndName;
@property(readonly) NSArray *memoryDatas;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly) NSString *associatedProcessUUID;
- (id)initWithProcess:(id)arg1;

@end

@interface DBGVariableExpressionNode : IDEVariablesViewNode
{
    NSString *_expression;
    id _loadBlock;
    BOOL _loading;
    BOOL _requestedLoad;
}

+ (id)keyPathsForValuesAffectingExpressionIsEmpty;
@property BOOL loading; // @synthesize loading=_loading;
- (long long)compare:(id)arg1;
- (id)dataValue;
@property(readonly) BOOL expressionIsEmpty;
@property(readonly) NSString *expression;
- (id)name;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithExpression:(id)arg1 withLoadBlock:(id)arg2;

@end

@interface _DBGDebuggerUIPrivateClassForFindingBundle : NSObject
{
}

@end

@interface DBGExpressionEditor : NSViewController <NSPopoverDelegate>
{
    NSTextField *_expressionField;
    NSPopover *_popover;
    NSString *_expressionString;
    NSString *_subStringToSelect;
    BOOL _showInAllStackFrames;
    id _doneButtonHandler;
}

+ (id)expressionEditor:(id)arg1 subStringToSelect:(id)arg2 showInAllStackFrames:(BOOL)arg3;
@property NSPopover *popover; // @synthesize popover=_popover;
@property(copy) id doneButtonHandler; // @synthesize doneButtonHandler=_doneButtonHandler;
@property BOOL showInAllStackFrames; // @synthesize showInAllStackFrames=_showInAllStackFrames;
@property(copy) NSString *subStringToSelect; // @synthesize subStringToSelect=_subStringToSelect;
@property(copy) NSString *expressionString; // @synthesize expressionString=_expressionString;
- (void)popoverDidShow:(id)arg1;
- (void)doneButtonPressed:(id)arg1;
- (void)_selectSubString;
- (id)init;

@end

@interface IDEBreakpointGroup : NSObject
{
    IDEBreakpointBucket *_bucket;
    NSMutableArray *_subGroups;
    unsigned long long _breakpointCount;
    unsigned long long _disabledBreakpointCount;
}

+ (void)initialize;
+ (id)keyPathsForValuesAffectingNavigableItem_image;
+ (id)keyPathsForValuesAffectingNavigableItem_subtitle;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property unsigned long long disabledBreakpointCount; // @synthesize disabledBreakpointCount=_disabledBreakpointCount;
@property unsigned long long breakpointCount; // @synthesize breakpointCount=_breakpointCount;
@property(copy) IDEBreakpointBucket *bucket; // @synthesize bucket=_bucket;
- (id)ideModelObjectTypeIdentifier;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)_addFileGroupInSortedOrder:(id)arg1;
- (id)_createAndAddFileBreakpointGroupForFilePathIfNecessary:(id)arg1;
- (id)_getFileBreakpointGroupForFilePath:(id)arg1;
- (id)_findFileBreakpointGroupForFilePath:(id)arg1;
- (void)_removeFileBreakpoint:(id)arg1;
- (void)_addFileBreakpoint:(id)arg1;
- (void)_updateDisabledBreakpointCount:(id)arg1;
- (void)removeBreakpoint:(id)arg1;
- (void)addBreakpoint:(id)arg1;
- (id)initWithBucket:(id)arg1;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_subtitle;
@property(readonly) NSString *navigableItem_name;

// Remaining properties
@property(copy) NSMutableArray *mutableSubGroups; // @dynamic mutableSubGroups;
@property(copy) NSArray *subGroups; // @dynamic subGroups;

@end

@interface IDEBreakpointNavigator : IDEOutlineBasedNavigator <NSOutlineViewDelegate, NSMenuDelegate>
{
    DVTBorderedView *_glassBar;
    DVTGradientImagePopUpButton *_addButton;
    DVTGradientImageButton *_deleteButton;
    IDENavigatorFilterControlBar *_filterControl;
    IDENavigatorDataCell *_defaultCell;
    IDENavigatorDataCell *_breakpointBucketCell;
    IDENavigatorDataCell *_breakpointCell;
    IDEBreakpointCell *_breakpointImageSubCell;
    IDEBreakpointNavigatorModel *_model;
    NSMutableSet *_collapsedItems;
    NSMutableSet *_collapsedItemsBeforeFiltering;
    BOOL _enabledBreakpointsFilteringEnabled;
    NSString *_filterString;
    BOOL _restoringState;
    BOOL _addingInitialBreakpoints;
    id <DVTObservingToken> _breakpointListToken;
    id <DVTObservingToken> _breakpointsActivatedToken;
    id <DVTObservingToken> _selectedObjectsListToken;
    NSMapTable *_breakpointsToTokens;
    NSMapTable *_breakpointsToShouldBeEnabledTokens;
    NSArray *_draggedItems;
}

+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
@property(copy) NSString *filterString; // @synthesize filterString=_filterString;
@property BOOL enabledBreakpointsFilteringEnabled; // @synthesize enabledBreakpointsFilteringEnabled=_enabledBreakpointsFilteringEnabled;
- (id)_collapsedItemsAsNameTree;
- (void)_setCollapsedItemsFromNameTree:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)stateChanged;
- (void)deleteSelectedItems:(id)arg1;
- (void)createSymbolicBreakpoint:(id)arg1;
- (void)createExceptionBreakpoint:(id)arg1;
- (void)_showBreakpointEditorForNavigableItem:(id)arg1;
- (void)_selectBreakpointAndShowBreakpointEditor:(id)arg1;
- (BOOL)_navigableItemRepresentsEditableBreakpoint:(id)arg1;
- (id)openSpecifierForNavigableItem:(id)arg1 error:(id *)arg2;
- (BOOL)shouldOpenNavigableItem:(id)arg1;
- (void)_addMenuItemToMenu:(id)arg1 forBucket:(id)arg2;
- (void)_addMoveMenuToMenu:(id)arg1 rightClickedItems:(id)arg2 plural:(BOOL)arg3;
- (void)_addDeleteMenuItemToMenu:(id)arg1 plural:(BOOL)arg2;
- (void)_editRightClickedBreakpoint:(id)arg1;
- (void)_addEditMenuItemToMenu:(id)arg1 itemToEdit:(id)arg2;
- (void)_shareOrUnshareBreakpoints:(id)arg1;
- (void)_addShareOrUnshareMenuItemToMenu:(id)arg1 rightClickedItems:(id)arg2 plural:(BOOL)arg3;
- (void)_enableOrDisableBreakpoints:(id)arg1;
- (void)_addEnableOrDisableMenuItemToMenu:(id)arg1 rightClickedItems:(id)arg2 plural:(BOOL)arg3;
- (BOOL)_canEditRightClickedItems:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (unsigned long long)_itemDepth:(id)arg1;
- (void)_setCollapsedItems:(id)arg1;
- (void)_breakpointImageClicked:(id)arg1;
- (struct CGRect)_breakpointImageStatusCellRect:(long long)arg1;
- (BOOL)_wasBreakpointIconClickedAtCurrentPoint;
- (id)_breakpointCellForBreakpoint:(id)arg1;
- (id)_breakpointBucketCell;
- (id)_defaultCell;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)_updateBreakpointImageCellSubForBreakpoint:(id)arg1 selected:(BOOL)arg2;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)outlineView:(id)arg1 isGroupHeaderItem:(id)arg2;
- (id)_nonWatchpointItems:(id)arg1;
- (void)_moveBreakpointsForNavigableItems:(id)arg1 toBucket:(id)arg2;
- (void)_moveRightClickedBreakpointsToBucket:(id)arg1;
- (void)_selectItemNearDeletedItemIndex:(long long)arg1 parentItem:(id)arg2;
- (long long)_smallestRowIndexOfNavigableItemInArray:(id)arg1;
- (void)_deleteBreakpointsForNavigableItems:(id)arg1;
- (void)_deleteDraggedItems;
- (void)_deleteRightClickedItems;
- (void)_deleteSelectedItems;
- (void)_handleBreakpointsActivatedChanged;
- (void)_repaintRowForBreakpoint:(id)arg1;
- (void)_removeListenersFromBreakpoint:(id)arg1;
- (void)_addListenersToBreakpoint:(id)arg1;
- (BOOL)_isItemExpandedIncludingParents:(id)arg1;
- (void)_expandNavigableItemIfItemAndAncestorsAreNotInCollapsedSet:(id)arg1;
- (void)_handleBreakpointLocationsRemoved:(id)arg1;
- (void)_handleBreakpointLocationsAdded:(id)arg1;
- (void)_handleBreakpointLocationChanges:(id)arg1;
- (void)_expandBreakpointsIfNecessary:(id)arg1;
- (void)_handleBreakpointsAdded:(id)arg1;
- (void)_handleBreakpointsRemoved:(id)arg1;
- (void)_handleBreakpointChanges:(id)arg1;
- (void)_pushSelection;
- (void)revealNavigableItems:(id)arg1;
- (id)_createEnablementFilterPredicate;
- (id)_createFilterStringPredicate;
- (void)_clearFilter;
- (void)_updateFilterPredicate;
- (id)_breakpointsForNavigableItems:(id)arg1;
- (id)_breakpointsForNavigableItem:(id)arg1;
- (id)_breakpointManager;
- (void)setRootNavigableItem:(id)arg1;
- (void)invalidate;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_buildGlassBar;
- (id)domainIdentifier;
- (void)loadView;

@end

@interface IDENavigableItemBreakpointsDomainProvider : IDENavigableItemDomainProvider
{
}

+ (id)domainObjectForWorkspace:(id)arg1;

@end

@interface IDEBreakpointNavigatorOutlineView : IDENavigatorOutlineView
{
    IDEBreakpointNavigator *_breakpointNavigator;
    IDENavigableItem *_itemRequestedToBeCollapsed;
    BOOL _isCollapsingAllChildren;
}

- (void)mouseDown:(id)arg1;
- (BOOL)_didUserRequestItemBeCollapsed:(id)arg1;
- (void)collapseItem:(id)arg1 collapseChildren:(BOOL)arg2;
- (void)selectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (BOOL)_wantsUserCancelledOperation;
- (BOOL)_mouseOverNavigator;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (void)_setBreakpointNavigator:(id)arg1;
- (BOOL)canDragRowsWithIndexes:(id)arg1 atPoint:(struct CGPoint)arg2;

@end

@interface IDEBreakpointNavigatorGradientImagePopUpButtonCell : DVTGradientImagePopUpButtonCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface IDEBreakpointNavigatorModel : NSObject
{
    NSMutableArray *_groups;
}

+ (void)initialize;
- (id)ideModelObjectTypeIdentifier;
- (id)_findGroupForBreakpoint:(id)arg1;
- (void)removeBreakpoint:(id)arg1;
- (void)addBreakpoint:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly) NSArray *groups; // @dynamic groups;
@property(readonly) NSMutableArray *mutableGroups; // @dynamic mutableGroups;

@end

@interface IDEAppleScriptBreakpointActionEditor : NSViewController <NSTextFieldDelegate>
{
    IDEAppleScriptBreakpointAction *_action;
    NSTextView *_script;
    NSImageView *_compileStatusImage;
    NSTextField *_compileStatus;
}

- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (void)testScript:(id)arg1;
- (id)_compileScriptAndSetStatusMessage;
- (void)compileScript:(id)arg1;
- (void)loadView;
- (id)initWithAction:(id)arg1;

@end

@interface IDEBreakpointActionRowView : NSView
{
    NSArray *_privateConstraints;
    id <IDEBreakpointActionRowDelegate> _delegate;
    NSPopUpButton *_actionsPopup;
    NSButton *_addActionButton;
    NSButton *_deleteActionButton;
    NSSet *_breakpointActionEditorExtensions;
    BOOL _selectedActionEditorWantsToBeOnRight;
    NSMutableArray *_actions;
    IDEBreakpointAction *_selectedAction;
    NSView *_seletedActionEditorView;
}

+ (BOOL)requiresConstraintBasedLayout;
@property(retain) IDEBreakpointAction *selectedAction; // @synthesize selectedAction=_selectedAction;
- (void)_removeClicked:(id)arg1;
- (void)_addClicked:(id)arg1;
- (void)_actionSelected:(id)arg1;
- (id)_extensionForBreakpointAction:(id)arg1;
- (id)_breakpointActionEditorExtensions;
- (void)_createAndAddSelectedActionsEditor:(id)arg1;
- (id)_titlesForActions;
- (id)_createActions;
- (id)_generateConstraints;
- (void)_updateActionsWithUserAction;
- (void)viewDidMoveToWindow;
- (id)_createAddOrRemoveButton:(id)arg1;
- (void)_createAndAddDeleteActionButton;
- (void)_createAndAddAddActionButton;
- (void)_createAndAddActionsPopUpButton;
- (id)initWithAction:(id)arg1 andDelegate:(id)arg2;

@end

@interface IDEBreakpointEditorPopoverViewController : NSViewController <NSPopoverDelegate, DBGBreakpointEditorFirstResponderProvider, IDEBreakpointActionRowDelegate>
{
    IDEBreakpoint *_breakpoint;
    id <DBGBreakpointEditorFirstResponderProvider> _firstResponderProvider;
    NSTextField *_conditionTextField;
    NSView *_conditionAndIgnoreCountView;
    DVTStackView_AppKitAutolayout *_stackView;
    DVTStackView_AppKitAutolayout *_actionsStackView;
    NSButton *_clickToAddAnActionButton;
    NSPopover *_popover;
}

+ (id)keyPathsForValuesAffectingIgnoreCountPostText;
+ (void)hideCurrentEditor;
+ (void)showEditorForBreakpoint:(id)arg1 relativeToRect:(struct CGRect)arg2 ofView:(id)arg3;
@property(readonly) IDEBreakpoint *breakpoint; // @synthesize breakpoint=_breakpoint;
@property NSPopover *popover; // @synthesize popover=_popover;
- (void)_handleActionChanged:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)popoverShouldClose:(id)arg1;
- (void)popoverDidShow:(id)arg1;
- (void)popoverWillShow:(id)arg1;
@property(readonly) NSString *ignoreCountPostText;
- (void)removeRowRequestedByRow:(id)arg1;
- (void)addRowRequestedByRow:(id)arg1;
@property(readonly) NSView *initialFirstResponder;
- (void)addFirstAction:(id)arg1;
- (id)_addBreakpointActionRowToStackViewForAction:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_addBreakpointActionRowToStackViewBelow:(id)arg1;
- (id)_createBreakpointSpecificViewController;
- (void)_addInitialActions;
- (void)_addBreakpointSpecificView;
- (void)loadView;
- (id)_initWithBreakpoint:(id)arg1;

@end

@interface IDEBreakpointIgnoreCountFormatter : NSNumberFormatter
{
}

- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;
- (id)init;

@end

@interface IDEDebuggerCommandBreakpointActionEditor : NSViewController
{
    IDEDebuggerCommandBreakpointAction *_action;
}

- (id)initWithAction:(id)arg1;

@end

@interface IDEExceptionBreakpointEditorView : NSViewController
{
    IDEExceptionBreakpoint *_breakpoint;
}

+ (id)keyPathsForValuesAffectingExceptionNameHidden;
@property(retain) IDEExceptionBreakpoint *breakpoint; // @synthesize breakpoint=_breakpoint;
@property(readonly) BOOL exceptionNameHidden;
- (void)loadView;
- (id)initWithExceptionBreakpoint:(id)arg1;

@end

@interface IDEFileBreakpointGroup : NSObject
{
    IDEBreakpointBucket *_bucket;
    DVTFilePath *_filePath;
    NSString *_displayName;
    NSImage *_displayImage;
    NSArray *_breakpoints;
    NSMutableArray *_mutableBreakpoints;
}

+ (void)initialize;
@property(retain) IDEBreakpointBucket *bucket; // @synthesize bucket=_bucket;
@property(copy) DVTFilePath *filePath; // @synthesize filePath=_filePath;
@property(copy) NSImage *displayImage; // @synthesize displayImage=_displayImage;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
- (id)ideModelObjectTypeIdentifier;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)_assertBreakpointsFileIsSameAsGroup:(id)arg1;
- (void)removeFileBreakpoint:(id)arg1;
- (void)addFileBreakpointInSortedOrder:(id)arg1;
- (id)initWithFilePath:(id)arg1 bucket:(id)arg2;
- (id)navigableItem_contentDocumentLocation;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;

// Remaining properties
@property(copy) NSArray *breakpoints; // @dynamic breakpoints;
@property(copy) NSMutableArray *mutableBreakpoints; // @dynamic mutableBreakpoints;

@end

@interface IDELogBreakpointActionEditor : NSViewController <NSTextFieldDelegate>
{
    IDELogBreakpointAction *_action;
}

- (id)initWithAction:(id)arg1;

@end

@interface IDEShellCommandBreakpointActionEditor : NSViewController
{
    IDEShellCommandBreakpointAction *_action;
}

- (void)chooseCommand:(id)arg1;
- (id)initWithAction:(id)arg1;

@end

@interface IDESoundBreakpointActionEditor : NSViewController
{
    IDESoundBreakpointAction *_action;
    NSPopUpButton *_soundsPopup;
}

- (id)_soundImage;
- (void)soundSelected:(id)arg1;
- (void)loadView;
- (id)initWithAction:(id)arg1;

@end

@interface IDESymbolicBreakpointEditorView : NSViewController <DBGBreakpointEditorFirstResponderProvider>
{
    IDESymbolicBreakpoint *_breakpoint;
    NSTextField *_symbolField;
}

@property(readonly) NSView *initialFirstResponder;
- (void)loadView;
- (id)initWithSymbolicBreakpoint:(id)arg1;

@end

@interface DBGMemoryDataExecutionEnvironmentWrapper : IDENavigableItemDomainProvider
{
    NSMutableArray *_processWrappers;
    NSMapTable *_launchSessionsToObserverTokens;
}

+ (id)domainObjectForWorkspace:(id)arg1;
+ (void)initialize;
- (unsigned long long)navigableItem_indexOfRepresentedObjectForIdentifier:(id)arg1 inRelationshipKeyPath:(id)arg2;
- (id)navigableItem_identifierForRepresentedObjectAtIndex:(unsigned long long)arg1 inRelationshipKeyPath:(id)arg2;
- (void)_addMemoryDataGroupForProcess:(id)arg1;
- (void)_removeMemoryDataGroupForProcess:(id)arg1;
- (void)_handleTargetProcessChanged:(id)arg1;
- (void)_handleLaunchSessionsAdded:(id)arg1;
- (void)_handleLaunchSessionsRemoved:(id)arg1;
- (void)_handleLaunchSessionsChanged:(id)arg1;
- (id)_initWithWorkspace:(id)arg1;

// Remaining properties
@property(readonly) NSMutableArray *mutableProcessWrappers; // @dynamic mutableProcessWrappers;
@property(readonly) NSArray *processWrappers; // @dynamic processWrappers;

@end

@interface DBGAttachToProcessActivityReporter : IDEActivityReporter
{
    NSMapTable *_launchSessionsToTokens;
    NSMapTable *_reportForLaunchSessionTable;
}

+ (id)_titleForDebugSession:(id)arg1;
+ (void)initialize;
- (void)_processControlStateChanged:(id)arg1;
- (void)_handleLaunchSessionsDebugSessionIsGoingToAttach:(id)arg1;
- (void)_cancelActivityReportForLaunchSession:(id)arg1;
- (void)_handleCurrentDebugSessionForLaunchSessionChanged:(id)arg1;
- (void)_handleLaunchSessionAdded:(id)arg1;
- (void)_handleLaunchSessionRemoved:(id)arg1;
- (void)_handleLaunchSessionsChanged:(id)arg1;
- (id)initWithWorkspace:(id)arg1;

@end

@interface DBGBreakpointNavigableItem : IDEKeyDrivenNavigableItem
{
    IDEBreakpoint *_breakpoint;
    NSMutableArray *_childRepresentedObjects;
    unsigned long long _childItemsCount;
}

+ (id)keyPathsForValuesAffectingLeaf;
@property unsigned long long childItemsCount; // @synthesize childItemsCount=_childItemsCount;
- (void)updateChildItemsForChangeKind:(unsigned long long)arg1 atIndexes:(id)arg2;
- (void)invalidateChildItems;
- (BOOL)isLeaf;
- (id)childRepresentedObjects;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface DBGIndexCompletionStrategy : DVTTextCompletionStrategy
{
    NSDictionary *_indexCompletionsRequestDictionary;
    DVTTextDocumentLocation *_locationInAdjustedText;
}

- (id)completionItemsForDocumentLocation:(id)arg1 context:(id)arg2 areDefinitive:(char *)arg3;
- (void)prepareForDocumentLocation:(id)arg1 context:(id)arg2;

@end

@interface DBGDisassemblyGeniusResultsFinder : IDEGeniusResultsFinder
{
    id <DVTObservingToken> _instructionPointerObserver;
}

- (void)invalidate;
- (void)_updateGeniusResults;

@end

@interface DBGDebuggerCompletionStrategy : DVTTextCompletionStrategy
{
}

- (id)_sortedCompletionItemsFromStrings:(id)arg1 prefixToStripOff:(id)arg2 textAtPrompt:(id)arg3;
- (id)_completionsFromDebugger:(id)arg1 textUpToWordStart:(id)arg2 debugSession:(id)arg3;
- (id)completionItemsForDocumentLocation:(id)arg1 context:(id)arg2 areDefinitive:(char *)arg3;

@end

@interface DBGDisassemblyGeneratedContentProvider : DVTGeneratedContentProvider
{
    NSURL *_url;
    NSString *_displayName;
    NSURL *_temporaryFileURL;
    id <DVTObservingToken> _currentStackFrameToken;
    id <DVTObservingToken> _debugSessionCoalescedStateToken;
    id <DVTObservingToken> _launchSessionStateToken;
}

@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
- (id)_stackFrameForURLParts:(id)arg1 inLaunchSession:(id)arg2;
- (id)_stackFrameForURLParts:(id)arg1 inWorkspace:(id)arg2;
- (id)_stackFrameForURL:(id)arg1;
- (void)_closeDocument;
- (void)_requestDisassemblySettingDisassemblyPCIfNecessary:(id)arg1 resultHandler:(id)arg2;
- (void)_createLaunchSessionStateObserver:(id)arg1;
- (void)_createDebugSessionStateObserver:(id)arg1;
- (void)_createCurrentStackFrameObserver:(id)arg1;
- (void)generateContentForURL:(id)arg1 waitingBlock:(id)arg2 completionBlock:(void)arg3;
@property(readonly) NSURL *temporaryFileURL;
- (void)invalidate;

@end

@interface DBGDisassemblyItemExecutionEnvironmentWrapper : IDENavigableItemDomainProvider
{
    IDEWorkspace *_workspace;
    NSMutableArray *_processWrappers;
    NSMapTable *_launchSessionsProcessToObserverTokens;
    id <DVTObservingToken> _launchSessionObserver;
}

+ (id)domainObjectForWorkspace:(id)arg1;
+ (void)initialize;
- (id)disassemblyItemForStackFrame:(id)arg1;
- (void)_handleProcessRemoved:(id)arg1;
- (void)_handleProcessChanged:(id)arg1;
- (void)_handleLaunchSessionsAdded:(id)arg1;
- (void)_handleLaunchSessionsRemoved:(id)arg1;
- (void)_handleLaunchSessionsChanged:(id)arg1;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(readonly) NSMutableArray *mutableProcessWrappers; // @dynamic mutableProcessWrappers;
@property(readonly) NSArray *processWrappers; // @dynamic processWrappers;

@end

@interface DBGDisassemblyItem : NSObject
{
    DBGStackFrame *_stackFrame;
}

+ (id)keyPathsForValuesAffectingNavigableItem_image;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(readonly) DBGStackFrame *stackFrame; // @synthesize stackFrame=_stackFrame;
- (id)description;
- (id)navigableItem_contentDocumentLocation;
- (id)navigableItem_documentType;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (id)initWithStackFrame:(id)arg1;

@end

@interface DBGUnitTestLogProvider : DBGConsoleLogProvider <IDEOCUnitTestOutputParserDelegate>
{
    BOOL _isRunningUnitTests;
    BOOL _isUnitTestSession;
    NSMutableArray *_recorders;
    NSString *_savedPartialContent;
    IDETypeIdentifier *unitTestLogSectionDomainType;
    IDEActivityLogSection *log;
    IDEActivityLogUnitTestSection *logSection;
    IDEOCUnitTestOutputParser *outputParser;
}

+ (id)_logStorePrefix;
- (void)processConsoleText:(id)arg1;
- (void)appendAndPropagateUpText:(id)arg1 startingWithRecorder:(id)arg2;
- (void)testCaseDidProducePerformanceOutput:(id)arg1 rawOutput:(id)arg2;
- (void)testCaseDidFailForTestClass:(id)arg1 method:(id)arg2 withMessage:(id)arg3 file:(id)arg4 line:(long long)arg5 rawOutput:(id)arg6;
- (void)testCaseDidFinishForTestClass:(id)arg1 method:(id)arg2 withStatus:(id)arg3 duration:(double)arg4 rawOutput:(id)arg5;
- (void)testCaseDidStartForTestClass:(id)arg1 method:(id)arg2 rawOutput:(id)arg3;
- (void)testSuiteDidFinish:(id)arg1;
- (void)testSuite:(id)arg1 willFinishAt:(id)arg2 rawOutput:(id)arg3;
- (void)testSuite:(id)arg1 didStartAt:(id)arg2 rawOutput:(id)arg3;
- (void)recorderWillFinish:(unsigned long long)arg1;
- (void)testDidOutput:(id)arg1;
- (void)testSuiteDidFinish:(long long)arg1 withFailures:(long long)arg2 unexpected:(long long)arg3 testDuration:(double)arg4 totalDuration:(double)arg5 rawOutput:(id)arg6;
- (void)finishUnfinishedRecorder:(id)arg1;
- (id)parentSection;
- (id)currentSection;
- (id)currentRecorder;
- (void)_handleConsoleItemAdded:(id)arg1;
- (void)_handleConsoleAdaptorOutputTerminated:(id)arg1;
- (void)_handleLaunchSessionStateChanged:(id)arg1;
- (id)initWithDomainItem:(id)arg1;

@end

@interface DBGDisassemblyItemThreadWrapper : NSObject
{
    DBGThread *_thread;
    NSArray *_disassemblyItems;
}

+ (id)keyPathsForValuesAffectingNavigableItem_image;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(retain) NSArray *disassemblyItems; // @synthesize disassemblyItems=_disassemblyItems;
@property(readonly) DBGThread *thread; // @synthesize thread=_thread;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (id)disassemblyItemForStackFrame:(id)arg1;
- (void)_handleStackFramesChanged:(id)arg1;
- (id)initWithThread:(id)arg1;

@end

@interface DBGDisassemblyItemProcessWrapper : NSObject
{
    DBGProcess *_process;
    NSArray *_threadWrappers;
}

+ (id)keyPathsForValuesAffectingNavigableItem_image;
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(retain) NSArray *threadWrappers; // @synthesize threadWrappers=_threadWrappers;
@property(readonly) DBGProcess *process; // @synthesize process=_process;
- (id)navigableItem_image;
- (id)navigableItem_name;
- (id)disassemblyItemForStackFrame:(id)arg1;
- (void)_handleThreadsChanged:(id)arg1;
- (id)initWithProcess:(id)arg1;

@end

@interface DBGDebugSession (DBGDebugSessionNavigableItemPropertySupport)
@property(readonly) NSArray *navigableProcesses;
@end

@interface DBGThread (DBGThreadNavigableItemPropertySupport)
+ (id)keyPathsForValuesAffectingStatusIcon;
- (BOOL)isGroupHeader:(id)arg1;
- (id)sortValue;
@property(readonly) NSImage *statusIcon;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface DBGStackFrame (DBGStackFrameNavigableItemPropertySupport)
+ (id)keyPathsForValuesAffectingNavigableItem_name;
+ (id)stringInGrayColorFromString:(id)arg1;
- (BOOL)isGroupHeader:(id)arg1;
@property(readonly) NSImage *navigableItem_image;
- (id)_createImageFromFilePath:(id)arg1 withRed:(float)arg2 green:(float)arg3 blue:(float)arg4 alpha:(float)arg5;
@property(readonly) NSString *navigableItem_name;
@end

@interface DBGMemoryData (DBGMemoryDataAdditions)
+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (id)navigableItem_contentDocumentLocation;
- (id)navigableItem_documentType;
- (BOOL)isGroupHeader:(id)arg1;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDEBreakpoint (IDEBreakpointNavigatorSupport)
+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (id)navigableItem_contentDocumentLocation;
@property(readonly) NSString *popUpEditorDisplayName;
- (id)navigableItem_subtitle;
@property(readonly) NSString *navigableItem_name;
@end

@interface IDEFileBreakpoint (IDEBreakpointNavigatorSupport)
+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (id)popUpEditorDisplayName;
@property(readonly) NSImage *navigableItem_image;
- (id)navigableItem_subtitle;
@property(readonly) DVTTextDocumentLocation *navigableItem_contentDocumentLocation;
@end

@interface IDESymbolicBreakpoint (IDEBreakpointNavigatorSupport)
- (id)popUpEditorDisplayName;
@property(readonly) NSImage *navigableItem_image;
@end

@interface IDEExceptionBreakpoint (IDEBreakpointNavigatorSupport)
- (id)popUpEditorDisplayName;
@property(readonly) NSImage *navigableItem_image;
@end

@interface IDEAddressBreakpoint (IDEBreakpointNavigatorSupport)
@property(readonly) NSImage *navigableItem_image;
@end

@interface IDEWatchpoint (IDEBreakpointNavigatorSupport)
@property(readonly) NSImage *navigableItem_image;
@end

@interface IDEBreakpointLocation (IDEBreakpointNavigatorSupport)
- (id)navigableItem_contentDocumentLocation;
- (id)popUpEditorDisplayName;
@property(readonly) NSImage *navigableItem_image;
@end

@interface IDEBreakpointBucket (IDEBreakpointNavigatorSupport)
+ (id)keyPathsForValuesAffectingDisplayImage;
@property(readonly) NSImage *displayImage;
@end

@interface DBGProcess (DBGProcessAdditions)
@property(readonly) NSImage *image;
@end

@interface NSArray (UnitTestAdditions)
- (id)penultimateObject;
@end

