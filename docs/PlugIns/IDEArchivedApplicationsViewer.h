/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

/*
 * File: /Applications/Xcode.app/Contents/PlugIns/IDEArchivedApplicationsViewer.ideplugin/Contents/MacOS/IDEArchivedApplicationsViewer
 * UUID: 45F363E7-208A-36A3-90BB-48950DBE0F77
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 1187.0.0, Compatibility version: 1.0.0
 *       Minimum Mac OS X version: 10.7.0
 *
 *       Objective-C Garbage Collection: Required
 */

@protocol DVTStatefulObject <NSObject>
+ (long long)version;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)setStateToken:(id)arg1;
@end

@protocol IDEInitialization
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
@end

@protocol IDEOrganizerSource <NSObject, DVTStatefulObject>

@optional
- (void)organizerSourceWillAppearInWindowController:(id)arg1;
- (void)openFileURL:(id)arg1 withFileType:(id)arg2;
- (void)searchWithString:(id)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(id)arg1 isValidObject:(id)arg2;
- (void)control:(id)arg1 didFailToValidatePartialString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
@end

@protocol NSObject
- (id)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@end

@protocol NSOpenSavePanelDelegate <NSObject>

@optional
- (void)panelSelectionDidChange:(id)arg1;
- (void)panel:(id)arg1 willExpand:(BOOL)arg2;
- (id)panel:(id)arg1 userEnteredFilename:(id)arg2 confirmed:(BOOL)arg3;
- (void)panel:(id)arg1 didChangeToDirectoryURL:(id)arg2;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
@end

@protocol NSSplitViewDelegate <NSObject>

@optional
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitViewWillResizeSubviews:(id)arg1;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (struct CGRect)splitView:(id)arg1 effectiveRect:(struct CGRect)arg2 forDrawnRect:(struct CGRect)arg3 ofDividerAtIndex:(long long)arg4;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (id)tableView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)tableView:(id)arg1 updateDraggingItemsForDrag:(id)arg2;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(id)arg4;
- (id)tableView:(id)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(id)arg1;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (long long)tableView:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(id)arg4;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(id)arg1 didDragTableColumn:(id)arg2;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)tableView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
@end

@interface AAVArchivedApplicationsViewController : IDEViewController <NSTableViewDelegate, NSTableViewDataSource, NSSplitViewDelegate, IDEOrganizerSource, IDEInitialization>
{
    NSSplitView *_mainSplitView;
    NSView *_leftView;
    NSView *_rightView;
    DVTTableView *_archiveEntries;
    DVTTableView *_archivesTableView;
    NSScrollView *_archivesTableScrollView;
    NSArrayController *_groupsArrayController;
    NSArrayController *_archivesArrayController;
    DVTScopeBarView *_scopeBar;
    NSView *_detailView;
    IDENavigatorDataCell *_archiveGroupCell;
    NSMutableDictionary *_archiveGroupBacking;
    NSString *_filterString;
    unsigned int _hasSelectedArchive:1;
}

+ (void)revealArchive:(id)arg1;
+ (void)revealArchiveNotification:(id)arg1;
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
@property _Bool hasSelectedArchive; // @synthesize hasSelectedArchive=_hasSelectedArchive;
@property(copy) NSString *filterString; // @synthesize filterString=_filterString;
- (void)revealArchive:(id)arg1;
- (BOOL)tableView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)deleteArchive:(id)arg1;
- (void)contextMenu_deleteArchive:(id)arg1;
- (void)_deleteArchives:(id)arg1;
- (void)deleteArchiveSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)showArchiveInFinder:(id)arg1;
- (void)performArchiveAction:(id)arg1;
- (void)performArchiveActionNamed:(id)arg1;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (void)_updateArchiveGroups;
- (id)_groupKeyForArchive:(id)arg1;
@property(readonly) NSArray *archiveGroups;
- (void)_layout;
- (void)loadView;
- (_Bool)areProfilesLoaded;
- (void)openFileURL:(id)arg1 withFileType:(id)arg2;

@end

@interface AAVArchiveGroup : NSObject
{
    NSString *_bundleIdentifier;
    NSString *_platformIdentifier;
    NSString *_schemeName;
    NSMutableArray *_archives;
}

+ (id)groupWithArchive:(id)arg1;
+ (void)initialize;
@property(readonly) NSDate *latestCreationDate;
@property(readonly) NSString *schemeName;
@property(readonly) NSString *bundleIdentifier;
@property(readonly) NSString *platformIdentifier;
@property(readonly) NSImage *displayIcon;
@property(readonly) NSString *displayName;
- (id)valueInNewestArchiveForKeyPath:(id)arg1;
@property(readonly) _Bool isSingleAppArchiveGroup;
- (void)_removeAnyArchivesNotInArray:(id)arg1;
- (id)init;

// Remaining properties
@property(copy) NSArray *archives; // @dynamic archives;
@property(readonly) NSMutableArray *mutableArchives; // @dynamic mutableArchives;

@end

@interface AAVITunesConnectProxy : NSObject
{
}

+ (id)uploadApplicationArchiveAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 description:(id)arg4 willBeginCallback:(id)arg5 updatePercentageCallback:(void)arg6 shouldContinueCallback:(id)arg7 didCompleteCallback:(void)arg8;
+ (id)validateApplicationArchiveAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 description:(id)arg4;
+ (id)service;

@end

@interface AAVITunesConnectProxyDelegate : NSObject
{
    id willBeginCallback;
    id updatePercentageCallback;
    id shouldContinueCallback;
    id didCompleteCallback;
}

@property(copy) id didCompleteCallback; // @synthesize didCompleteCallback;
@property(copy) id shouldContinueCallback; // @synthesize shouldContinueCallback;
@property(copy) id updatePercentageCallback; // @synthesize updatePercentageCallback;
@property(copy) id willBeginCallback; // @synthesize willBeginCallback;
- (void)softwareService:(id)arg1 didCompleteUploadForApplication:(id)arg2;
- (BOOL)softwareService:(id)arg1 shouldContinueUploadForApplication:(id)arg2;
- (void)softwareService:(id)arg1 didUpdatePercentageComplete:(id)arg2 forApplication:(id)arg3;
- (void)softwareService:(id)arg1 willBeginUploadForApplication:(id)arg2;

@end

@interface AAVAssistant : IDEAssistant
{
    BOOL canGoForward;
    BOOL canGoBack;
    BOOL canFinish;
}

@property BOOL canFinish; // @synthesize canFinish;
@property BOOL canGoBack; // @synthesize canGoBack;
@property BOOL canGoForward; // @synthesize canGoForward;
- (void)finishWithCompletionBlock:(id)arg1;
- (void)loadView;

@end

@interface AAVIdentityAssistant : AAVAssistant
{
    NSTabView *tabView;
    NSView *containerView;
    NSTextField *codesignIdentityLabel;
    NSPopUpButton *codesignIdentityPopup;
    NSTextField *identityErrorField;
    NSButton *devCenterButton;
    NSTextField *devCenterDescription;
    NSArray *identityErrorFieldConstraints;
    id <DVTObservingToken> identitiesObserver;
    id <DVTObservingToken> viewToken;
    _Bool showImportDevProfileButtons;
    NSPopUpButton *applicationPopup;
}

+ (id)keyPathsForValuesAffectingWarningTabMessageDetails;
+ (id)keyPathsForValuesAffectingWarningTabMessage;
+ (id)keyPathsForValuesAffectingInstallerIdentityObject;
+ (id)keyPathsForValuesAffectingCodesignIdentityObject;
+ (id)keyPathsForValuesAffectingSelectedApplication;
+ (id)keyPathsForValuesAffectingApplications;
@property(retain) NSPopUpButton *applicationPopup; // @synthesize applicationPopup;
@property _Bool showImportDevProfileButtons; // @synthesize showImportDevProfileButtons;
@property(retain) id <DVTObservingToken> viewToken; // @synthesize viewToken;
@property(retain) id <DVTObservingToken> identitiesObserver; // @synthesize identitiesObserver;
@property(retain) NSArray *identityErrorFieldConstraints; // @synthesize identityErrorFieldConstraints;
@property NSTextField *devCenterDescription; // @synthesize devCenterDescription;
@property NSButton *devCenterButton; // @synthesize devCenterButton;
@property(retain) NSTextField *identityErrorField; // @synthesize identityErrorField;
@property(retain) NSPopUpButton *codesignIdentityPopup; // @synthesize codesignIdentityPopup;
@property(retain) NSTextField *codesignIdentityLabel; // @synthesize codesignIdentityLabel;
@property NSView *containerView; // @synthesize containerView;
@property(retain) NSTabView *tabView; // @synthesize tabView;
- (void)_takeIdentityFrom:(id)arg1;
- (void)_updateIdentityUI;
- (void)_delayedUpdateIdentityUI;
- (id)assistantTitle;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)loadView;
- (void)_updateLayout;
- (void)showImportHelp:(id)arg1;
- (void)importProfile:(id)arg1;
- (void)connectToDevCenter:(id)arg1;
- (id)warningTabMessageDetails;
- (id)warningTabMessage;
@property(readonly) id <IDEArchivePackagerIdentityToken> installerIdentityObject;
@property(retain) id <IDEArchivePackagerIdentityToken> codesignIdentityObject;
- (_Bool)_directDistribution;
@property(readonly) _Bool supportsInstallerSigning;
@property(readonly) _Bool supportsCodeSigning;
- (void)setSelectedApplication:(id)arg1;
- (id)selectedApplication;
@property(readonly) NSArray *applications;

@end

@interface AAVDistributeAssistant : AAVAssistant
{
    NSButton *radio1;
    NSButton *radio2;
    NSButton *radio3;
    NSTextField *description1;
    NSTextField *description2;
    NSTextField *description3;
    NSPopUpButton *exportPopup;
    NSArray *exportOptions;
}

@property(copy) NSArray *exportOptions; // @synthesize exportOptions;
@property NSPopUpButton *exportPopup; // @synthesize exportPopup;
@property NSTextField *description3; // @synthesize description3;
@property NSTextField *description2; // @synthesize description2;
@property NSTextField *description1; // @synthesize description1;
@property NSButton *radio3; // @synthesize radio3;
@property NSButton *radio2; // @synthesize radio2;
@property NSButton *radio1; // @synthesize radio1;
- (void)loadView;
- (void)_updateNextAssistant;
- (void)popupAction:(id)arg1;
- (void)radioClicked:(id)arg1;
@property(readonly) int distributionType;
- (id)_distributionTypeValues;

@end

@interface AAVProgressAssistant : AAVAssistant
{
    NSProgressIndicator *progressIndicator;
    AAVAssistantProgressView *progressView;
    NSTextField *progressField;
    NSString *progressMessage;
    id <DVTObservingToken> viewToken;
}

+ (id)defaultViewNibName;
+ (BOOL)wantsOverlayEffect;
@property(retain) id <DVTObservingToken> viewToken; // @synthesize viewToken;
@property(retain) NSString *progressMessage; // @synthesize progressMessage;
@property(retain) NSTextField *progressField; // @synthesize progressField;
@property(retain) AAVAssistantProgressView *progressView; // @synthesize progressView;
@property(retain) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator;
- (void)taskDidFinishWithError:(id)arg1;
- (void)goBackWithError:(id)arg1;
- (void)alertEnded:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)loadView;

@end

@interface AAVPackageGenerationAssistant : AAVProgressAssistant
{
}

+ (id)keyPathsForValuesAffectingInstallerIdentityObject;
+ (id)keyPathsForValuesAffectingCodesignIdentityObject;
- (void)viewDidInstall;
- (id)installerIdentityObject;
- (id)codesignIdentityObject;

@end

@interface AAVValidationMethodAssistant : AAVAssistant
{
    NSButton *storeRadioButton;
    NSButton *directRadioButton;
}

@property NSButton *directRadioButton; // @synthesize directRadioButton;
@property NSButton *storeRadioButton; // @synthesize storeRadioButton;
- (void)radioClicked:(id)arg1;
- (void)loadView;

@end

@interface AAVValidationProgressAssistant : AAVProgressAssistant
{
}

+ (BOOL)wantsOverlayEffect;
- (void)viewDidInstall;

@end

@interface AAVSubmissionProgressAssistant : AAVProgressAssistant
{
    double progress;
}

+ (BOOL)wantsOverlayEffect;
+ (id)defaultViewNibName;
@property double progress; // @synthesize progress;
- (void)viewDidInstall;
- (void)loadView;

@end

@interface AAVValidationErrorsAssistant : AAVAssistant
{
    NSArrayController *arrayController;
}

+ (id)keyPathsForValuesAffectingValidationErrors;
@property(retain) NSArrayController *arrayController; // @synthesize arrayController;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)viewDidInstall;
- (void)loadView;
@property(copy) NSArray *validationErrors;

@end

@interface AAVValidationSuccessAssistant : AAVAssistant
{
    NSTextField *textField;
}

@property(retain) NSTextField *textField; // @synthesize textField;
- (id)message;
- (id)assistantTitle;
- (void)loadView;
- (void)viewDidInstall;

@end

@interface AAVFetchApplicationListAssistant : AAVProgressAssistant
{
}

- (void)viewDidInstall;

@end

@interface AAVFetchCertificatesAssistant : AAVProgressAssistant
{
}

+ (BOOL)wantsOverlayEffect;
- (void)viewDidInstall;
- (void)loadView;
- (id)assistantTitle;

@end

@interface AAVBuildIdentityListAssistant : AAVProgressAssistant
{
}

+ (BOOL)wantsOverlayEffect;
- (void)viewDidInstall;
- (id)assistantTitle;
- (id)_progressMessage;

@end

@interface AAVImportProfileAssistant : AAVProgressAssistant
{
}

+ (BOOL)wantsOverlayEffect;
- (void)viewDidInstall;
- (void)alertEnded:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;

@end

@interface AAVShareCompletionAssistant : AAVAssistant <NSOpenSavePanelDelegate>
{
    NSString *applicationURL;
    NSString *applicationTitle;
    NSString *subtitle;
    NSString *largeImageURL;
    NSString *smallImageURL;
    NSView *enterpriseAccessoryView;
    _Bool _useEnterpriseDistribution;
    _Bool imagesNeedShine;
}

@property _Bool imagesNeedShine; // @synthesize imagesNeedShine;
@property(retain) NSView *enterpriseAccessoryView; // @synthesize enterpriseAccessoryView;
@property(copy) NSString *smallImageURL; // @synthesize smallImageURL;
@property(copy) NSString *largeImageURL; // @synthesize largeImageURL;
@property(copy) NSString *subtitle; // @synthesize subtitle;
@property(copy) NSString *applicationTitle; // @synthesize applicationTitle;
@property(copy) NSString *applicationURL; // @synthesize applicationURL;
- (void)finishWithCompletionBlock:(id)arg1;
@property(nonatomic) _Bool useEnterpriseDistribution; // @synthesize useEnterpriseDistribution=_useEnterpriseDistribution;
- (void)updateEnterpriseAccessoryViewHeightAnimated:(BOOL)arg1;
- (BOOL)canFinish;

@end

@interface AAVLoginAssistant : AAVAssistant
{
}

+ (id)keyPathsForValuesAffectingCanGoForward;
+ (id)keyPathsForValuesAffectingUseKeychain;
+ (id)keyPathsForValuesAffectingPassword;
+ (id)keyPathsForValuesAffectingUsername;
- (BOOL)canGoForward;
@property _Bool useKeychain;
@property(copy) NSString *password;
@property(copy) NSString *username;
- (void)loadView;
- (id)nibName;

@end

@interface AAVADCLoginAssistant : AAVLoginAssistant
{
}

- (void)viewDidInstall;
- (void)loadView;
- (id)assistantTitle;

@end

@interface AAViTCLoginAssistant : AAVLoginAssistant
{
}

- (void)viewDidInstall;
- (void)loadView;

@end

@interface AAVAssistantContext : IDEAssistantContext
{
    IDEArchive *archive;
    IDEArchiveIdentityFilter *codesignIdentityFilter;
    id <IDEArchivePackagerIdentityToken> codesignIdentityObject;
    DVTFilePath *sourcePath;
    NSString *defaultSaveName;
    BOOL sourceIsTemporary;
    _Bool forceDisableCodesigning;
    _Bool forceDisablePackagesigning;
    NSArray *identityTokens;
}

+ (id)keyPathsForValuesAffectingInstallerIdentityObject;
@property(retain) NSArray *identityTokens; // @synthesize identityTokens;
@property _Bool forceDisablePackagesigning; // @synthesize forceDisablePackagesigning;
@property _Bool forceDisableCodesigning; // @synthesize forceDisableCodesigning;
@property BOOL sourceIsTemporary; // @synthesize sourceIsTemporary;
@property(copy) NSString *defaultSaveName; // @synthesize defaultSaveName;
@property(retain) DVTFilePath *sourcePath; // @synthesize sourcePath;
@property(retain) id <IDEArchivePackagerIdentityToken> codesignIdentityObject; // @synthesize codesignIdentityObject;
@property(retain) IDEArchiveIdentityFilter *codesignIdentityFilter; // @synthesize codesignIdentityFilter;
@property(retain) IDEArchive *archive; // @synthesize archive;
@property(readonly) id <IDEArchivePackagerIdentityToken> installerIdentityObject;
- (id)workspaceWindow;

@end

@interface AAVDistributeAssistantContext : AAVLoginAssistantContext
{
    int distributionType;
}

@property int distributionType; // @synthesize distributionType;

@end

@interface AAVLoginAssistantContext : AAVAssistantContext
{
    NSString *_username;
    NSString *_password;
    NSArray *applications;
    _Bool _useKeychain;
    NSURLProtectionSpace *_protectionSpace;
    id selectedApplication;
    NSArray *validationErrors;
    NSError *lastError;
}

@property(retain) NSError *lastError; // @synthesize lastError;
@property(copy) NSArray *validationErrors; // @synthesize validationErrors;
@property(retain) id selectedApplication; // @synthesize selectedApplication;
@property(retain) NSURLProtectionSpace *protectionSpace; // @synthesize protectionSpace=_protectionSpace;
@property(copy) NSArray *applications; // @synthesize applications;
@property(copy) NSString *password; // @synthesize password=_password;
@property(copy) NSString *username; // @synthesize username=_username;
@property _Bool useKeychain; // @synthesize useKeychain=_useKeychain;
- (void)_savePasswordToKeychain;
- (void)_updatePasswordFromKeychain;
- (void)_updateDefaultPasswordFromKeychain;

@end

@interface AAVValidateAssitantContext : AAVLoginAssistantContext
{
    int validationType;
}

@property int validationType; // @synthesize validationType;

@end

@interface AAVValidationIssue : NSObject
{
    NSString *issueText;
    NSImage *issueImage;
}

@property(retain) NSImage *issueImage; // @synthesize issueImage;
@property(copy) NSString *issueText; // @synthesize issueText;

@end

@interface AAVAssistantProgressView : NSView
{
    _Bool drawBackground;
}

@property _Bool drawBackground; // @synthesize drawBackground;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface IDEArchive (AAVArchiveViewerExtensions)
- (id)aav_validateForDirectDistribution;
- (void)performArchiveAction:(id)arg1;
@property(readonly) IDEArchivePackager *aav_packager;
@property(readonly) NSArray *aav_archiveActions;
@property(readonly) NSImage *aav_displayIcon;
@property(readonly) NSArray *aav_displayIcons;
- (id)aav_version;
- (BOOL)aav_showEstimatedSize;
@property(readonly) NSString *aav_archiveType;
@property(readonly) NSString *aav_humanReadablePlatformName;
@property(readonly) NSString *aav_platformName;
@property(readonly) NSString *aav_bundleIdentifier;
@property(readonly) NSString *aav_displayName;
- (id)aav_appInfoPlist;
@end

